Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 blockHead: TOKEN_BEGIN declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 unlabelledCompound: TOKEN_BEGIN compoundTail

   12 compoundStatement: unlabelledCompound
   13                  | tlabel compoundStatement

   14 compoundTail: statement TOKEN_END
   15             | statement TOKEN_SEMICOLON compoundTail

   16 declaration: typeDeclaration
   17            | arrayDeclaration
   18            | switchDeclaration
   19            | procedureDeclaration

   20 lowerBound: arithmeticExpression

   21 upperBound: arithmeticExpression

   22 boundPair: lowerBound TOKEN_COLON upperBound

   23 boundPairList: boundPair
   24              | boundPairList TOKEN_COMMA boundPair

   25 arrayIdentifier: identifier

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier TOKEN_COMMA arraySegment

   28 arrayList: arraySegment
   29          | arrayList TOKEN_COMMA arraySegment

   30 arrayDeclaration: type TOKEN_ARRAY arrayList

   31 expression: arithmeticExpression
   32           | booleanExpression
   33           | designationalExpression

   34 arithmeticExpression: simpleArithmeticExpression

   35 simpleArithmeticExpression: term
   36                           | TOKEN_PLUS term
   37                           | TOKEN_MINUS term
   38                           | simpleArithmeticExpression TOKEN_PLUS term
   39                           | simpleArithmeticExpression TOKEN_MINUS term

   40 term: factor
   41     | term TOKEN_MULTIPLY factor
   42     | term TOKEN_DIVIDE factor

   43 factor: primary
   44       | factor TOKEN_POWER primary

   45 primary: unsignedNumber
   46        | functionDesignator
   47        | variable
   48        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   49 unsignedNumber: realNumber
   50               | integer

   51 realNumber: TOKEN_REAL_NUM

   52 integer: TOKEN_INTEGER

   53 simpleVariable: varIdentifier

   54 variable: simpleVariable
   55         | subscriptedVariable

   56 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   57 subscriptList: subscriptExpression
   58              | subscriptList TOKEN_COMMA subscriptExpression

   59 subscriptExpression: arithmeticExpression

   60 identifier: TOKEN_IDENTIFIER

   61 booleanExpression: simpleBoolean

   62 simpleBoolean: implication
   63              | simpleBoolean TOKEN_EQUIV implication

   64 implication: booleanTerm
   65            | implication TOKEN_IMPLY booleanTerm

   66 booleanTerm: booleanFactor
   67            | booleanTerm TOKEN_OR_OP booleanFactor

   68 booleanFactor: booleanSecondary
   69              | booleanFactor TOKEN_AND_OP booleanSecondary

   70 booleanSecondary: booleanPrimary
   71                 | TOKEN_NOT_OP booleanPrimary

   72 booleanPrimary: logicalValue
   73               | relation
   74               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   75 logicalValue: TOKEN_LOGICAL_VALUE

   76 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   77 relationalOperator: TOKEN_REL_OP

   78 listType: varIdentifier
   79         | listType TOKEN_COMMA varIdentifier

   80 type: TOKEN_TYPE_REAL
   81     | TOKEN_TYPE_INTEGER
   82     | TOKEN_TYPE_BOOLEAN

   83 typeDeclaration: type listType

   84 varIdentifier: identifier

   85 unconditionalStatement: basicStatement
   86                       | compoundStatement
   87                       | block

   88 conditionalStatement: ifStatement
   89                     | ifStatement TOKEN_ELSE statement
   90                     | ifClause forStatement
   91                     | tlabel conditionalStatement

   92 ifStatement: ifClause unconditionalStatement

   93 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   94 basicStatement: unlabelledBasicStatement
   95               | tlabel basicStatement

   96 unlabelledBasicStatement: assignmentStatement
   97                         | dummyStatement
   98                         | procedureStatement
   99                         | returnStatement
  100                         | gotoStatement

  101 dummyStatement: empty

  102 returnStatement: TOKEN_RETURN expression

  103 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  104                    | variable TOKEN_ASSIGN booleanExpression

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  106 empty: /* empty */

  107 procedureStatement: procedureIdentifier actualParameterPart

  108 procedureIdentifier: identifier

  109 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  110                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  111 actualParameterList: actualParameter
  112                    | actualParameterList parameterDelimiter actualParameter

  113 actualParameter: expression

  114 parameterDelimiter: TOKEN_COMMA
  115                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  116 functionDesignator: procedureIdentifier actualParameterPart

  117 statement: unconditionalStatement
  118          | conditionalStatement
  119          | forStatement
  120          | TOKEN_PRINT expression

  121 formalParameter: identifier

  122 formalParameterList: formalParameter
  123                    | formalParameterList parameterDelimiter formalParameter

  124 formalParameterPart: empty

  125 $@1: /* empty */

  126 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList TOKEN_CLOSE_BRACKET

  127 identifierList: identifier
  128               | identifierList TOKEN_COMMA identifier

  129 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  130          | empty

  131 specifier: type
  132          | type TOKEN_ARRAY
  133          | TOKEN_TYPE_LABEL
  134          | TOKEN_SWITCH
  135          | type TOKEN_PROCEDURE

  136 specificationPart: empty
  137                  | specificationIdentifierList

  138 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  139                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  140 @2: /* empty */

  141 $@3: /* empty */

  142 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

  143 procedureBody: statement

  144 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  145                     | type TOKEN_PROCEDURE procedureHeading procedureBody

  146 gotoStatement: TOKEN_GOTO designationalExpression

  147 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

  148 switchList: designationalExpression
  149           | switchList TOKEN_COMMA designationalExpression

  150 switchIdentifier: identifier

  151 designationalExpression: simpleDesignationalExpression
  152                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

  153 simpleDesignationalExpression: TOKEN_COLON label
  154                              | switchDesignator
  155                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

  156 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 120
TOKEN_IDENTIFIER (259) 60
TOKEN_BEGIN (260) 1 11
TOKEN_END (261) 14
TOKEN_LOGICAL_VALUE (262) 75
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 135 144 145
TOKEN_PLUS (266) 36 38
TOKEN_MINUS (267) 37 39
TOKEN_DIVIDE (268) 42
TOKEN_POWER (269) 44
TOKEN_MULTIPLY (270) 41
TOKEN_COMMA (271) 24 27 29 58 79 114 128 149
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 48 74 109 110 115 126 155
TOKEN_CLOSE_BRACKET (277) 48 74 109 110 115 126 155
TOKEN_OPEN_SQUARE_BRACKET (278) 26 56
TOKEN_CLOSE_SQUARE_BRACKET (279) 26 56
TOKEN_OPEN_CURLY_BRACKET (280) 156
TOKEN_CLOSE_CURLY_BRACKET (281) 156
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 51
TOKEN_INTEGER (284) 52
TOKEN_COLON (285) 6 22 115 153
TOKEN_REL_OP (286) 77
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 63
TOKEN_AND_OP (294) 69
TOKEN_OR_OP (295) 67
TOKEN_NOT_OP (296) 71
TOKEN_GOTO (297) 146
TOKEN_FOR (298) 105
TOKEN_DO (299) 105
TOKEN_WHILE (300)
TOKEN_STEP (301) 105
TOKEN_UNTIL (302) 105
TOKEN_IF (303) 93
TOKEN_THEN (304) 93
TOKEN_ELSE (305) 89 152
TOKEN_SWITCH (306) 134 147
TOKEN_VALUE (307) 129
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 81
TOKEN_TYPE_REAL (311) 80
TOKEN_TYPE_BOOLEAN (312) 82
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 133
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 30 132
TOKEN_IMPLY (320) 65
TOKEN_SEMICOLON (321) 2 3 15 129 138 139 142
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 102
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 103 104 105 147
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 1 2, on right: 2 3
unlabelledBlock (76)
    on left: 3, on right: 4
block (77)
    on left: 4 5, on right: 5 10 87
tlabel (78)
    on left: 6, on right: 5 13 91 95
label (79)
    on left: 7 8, on right: 6 153
program (80)
    on left: 9 10, on right: 0
unlabelledCompound (81)
    on left: 11, on right: 12
compoundStatement (82)
    on left: 12 13, on right: 9 13 86
compoundTail (83)
    on left: 14 15, on right: 3 11 15
declaration (84)
    on left: 16 17 18 19, on right: 1 2
lowerBound (85)
    on left: 20, on right: 22
upperBound (86)
    on left: 21, on right: 22
boundPair (87)
    on left: 22, on right: 23 24
boundPairList (88)
    on left: 23 24, on right: 24 26
arrayIdentifier (89)
    on left: 25, on right: 26 27 56
arraySegment (90)
    on left: 26 27, on right: 27 28 29
arrayList (91)
    on left: 28 29, on right: 29 30
arrayDeclaration (92)
    on left: 30, on right: 17
expression (93)
    on left: 31 32 33, on right: 102 113 120
arithmeticExpression (94)
    on left: 34, on right: 20 21 31 48 59 103 105
simpleArithmeticExpression (95)
    on left: 35 36 37 38 39, on right: 34 38 39 76
term (96)
    on left: 40 41 42, on right: 35 36 37 38 39 41 42
factor (97)
    on left: 43 44, on right: 40 41 42 44
primary (98)
    on left: 45 46 47 48, on right: 43 44
unsignedNumber (99)
    on left: 49 50, on right: 45
realNumber (100)
    on left: 51, on right: 49
integer (101)
    on left: 52, on right: 8 50
simpleVariable (102)
    on left: 53, on right: 54
variable (103)
    on left: 54 55, on right: 47 103 104 105
subscriptedVariable (104)
    on left: 56, on right: 55
subscriptList (105)
    on left: 57 58, on right: 56 58
subscriptExpression (106)
    on left: 59, on right: 57 58 156
identifier (107)
    on left: 60, on right: 7 25 84 108 115 121 127 128 150
booleanExpression (108)
    on left: 61, on right: 32 74 93 104
simpleBoolean (109)
    on left: 62 63, on right: 61 63
implication (110)
    on left: 64 65, on right: 62 63 65
booleanTerm (111)
    on left: 66 67, on right: 64 65 67
booleanFactor (112)
    on left: 68 69, on right: 66 67 69
booleanSecondary (113)
    on left: 70 71, on right: 68 69
booleanPrimary (114)
    on left: 72 73 74, on right: 70 71
logicalValue (115)
    on left: 75, on right: 72
relation (116)
    on left: 76, on right: 73
relationalOperator (117)
    on left: 77, on right: 76
listType (118)
    on left: 78 79, on right: 79 83
type (119)
    on left: 80 81 82, on right: 30 83 131 132 135 145
typeDeclaration (120)
    on left: 83, on right: 16
varIdentifier (121)
    on left: 84, on right: 53 78 79
unconditionalStatement (122)
    on left: 85 86 87, on right: 92 117
conditionalStatement (123)
    on left: 88 89 90 91, on right: 91 118
ifStatement (124)
    on left: 92, on right: 88 89
ifClause (125)
    on left: 93, on right: 90 92 152
basicStatement (126)
    on left: 94 95, on right: 85 95
unlabelledBasicStatement (127)
    on left: 96 97 98 99 100, on right: 94
dummyStatement (128)
    on left: 101, on right: 97
returnStatement (129)
    on left: 102, on right: 99
assignmentStatement (130)
    on left: 103 104, on right: 96
forStatement (131)
    on left: 105, on right: 90 119
empty (132)
    on left: 106, on right: 101 124 130 136
procedureStatement (133)
    on left: 107, on right: 98
procedureIdentifier (134)
    on left: 108, on right: 107 116 142
actualParameterPart (135)
    on left: 109 110, on right: 107 116
actualParameterList (136)
    on left: 111 112, on right: 110 112
actualParameter (137)
    on left: 113, on right: 111 112
parameterDelimiter (138)
    on left: 114 115, on right: 112 123
functionDesignator (139)
    on left: 116, on right: 46
statement (140)
    on left: 117 118 119 120, on right: 14 15 89 105 143
formalParameter (141)
    on left: 121, on right: 122 123
formalParameterList (142)
    on left: 122 123, on right: 123 126
formalParameterPart (143)
    on left: 124 126, on right: 142
$@1 (144)
    on left: 125, on right: 126
identifierList (145)
    on left: 127 128, on right: 128 129 138 139
valuePart (146)
    on left: 129 130, on right: 142
specifier (147)
    on left: 131 132 133 134 135, on right: 138 139
specificationPart (148)
    on left: 136 137, on right: 142
specificationIdentifierList (149)
    on left: 138 139, on right: 137 139
procedureHeading (150)
    on left: 142, on right: 144 145
@2 (151)
    on left: 140, on right: 142
$@3 (152)
    on left: 141, on right: 142
procedureBody (153)
    on left: 143, on right: 144 145
procedureDeclaration (154)
    on left: 144 145, on right: 19
gotoStatement (155)
    on left: 146, on right: 100
switchDeclaration (156)
    on left: 147, on right: 18
switchList (157)
    on left: 148 149, on right: 147 149
switchIdentifier (158)
    on left: 150, on right: 147 156
designationalExpression (159)
    on left: 151 152, on right: 33 146 148 149 152 155
simpleDesignationalExpression (160)
    on left: 153 154 155, on right: 151 152
switchDesignator (161)
    on left: 156, on right: 154


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   60 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 60 (identifier)


state 2

    1 blockHead: TOKEN_BEGIN . declaration
   11 unlabelledCompound: TOKEN_BEGIN . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_GOTO          shift, and go to state 16
    TOKEN_FOR           shift, and go to state 17
    TOKEN_IF            shift, and go to state 18
    TOKEN_SWITCH        shift, and go to state 19
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_RETURN        shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    compoundTail              go to state 27
    declaration               go to state 28
    arrayIdentifier           go to state 29
    arrayDeclaration          go to state 30
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    type                      go to state 35
    typeDeclaration           go to state 36
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 51
    procedureDeclaration      go to state 52
    gotoStatement             go to state 53
    switchDeclaration         go to state 54


state 3

   52 integer: TOKEN_INTEGER .

    $default  reduce using rule 52 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 55


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 56
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 57
    integer             go to state 12
    identifier          go to state 13


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 58


state 9

    0 $accept: program . $end

    $end  shift, and go to state 59


state 10

   12 compoundStatement: unlabelledCompound .

    $default  reduce using rule 12 (compoundStatement)


state 11

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 12

    8 label: integer .

    $default  reduce using rule 8 (label)


state 13

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 14

  120 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 63
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 65
    TOKEN_NOT_OP         shift, and go to state 66
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 29
    expression                     go to state 67
    arithmeticExpression           go to state 68
    simpleArithmeticExpression     go to state 69
    term                           go to state 70
    factor                         go to state 71
    primary                        go to state 72
    unsignedNumber                 go to state 73
    realNumber                     go to state 74
    integer                        go to state 75
    simpleVariable                 go to state 31
    variable                       go to state 76
    subscriptedVariable            go to state 33
    identifier                     go to state 77
    booleanExpression              go to state 78
    simpleBoolean                  go to state 79
    implication                    go to state 80
    booleanTerm                    go to state 81
    booleanFactor                  go to state 82
    booleanSecondary               go to state 83
    booleanPrimary                 go to state 84
    logicalValue                   go to state 85
    relation                       go to state 86
    varIdentifier                  go to state 37
    ifClause                       go to state 87
    procedureIdentifier            go to state 88
    functionDesignator             go to state 89
    switchIdentifier               go to state 90
    designationalExpression        go to state 91
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 15

  144 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 94
    procedureIdentifier  go to state 95
    procedureHeading     go to state 96


state 16

  146 gotoStatement: TOKEN_GOTO . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 98
    ifClause                       go to state 87
    switchIdentifier               go to state 90
    designationalExpression        go to state 99
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 17

  105 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 29
    simpleVariable       go to state 31
    variable             go to state 100
    subscriptedVariable  go to state 33
    identifier           go to state 101
    varIdentifier        go to state 37


state 18

   93 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanExpression           go to state 105
    simpleBoolean               go to state 79
    implication                 go to state 80
    booleanTerm                 go to state 81
    booleanFactor               go to state 82
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 19

  147 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier        go to state 98
    switchIdentifier  go to state 106


state 20

   81 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 81 (type)


state 21

   80 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 80 (type)


state 22

   82 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 82 (type)


state 23

  102 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 63
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 65
    TOKEN_NOT_OP         shift, and go to state 66
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 29
    expression                     go to state 107
    arithmeticExpression           go to state 68
    simpleArithmeticExpression     go to state 69
    term                           go to state 70
    factor                         go to state 71
    primary                        go to state 72
    unsignedNumber                 go to state 73
    realNumber                     go to state 74
    integer                        go to state 75
    simpleVariable                 go to state 31
    variable                       go to state 76
    subscriptedVariable            go to state 33
    identifier                     go to state 77
    booleanExpression              go to state 78
    simpleBoolean                  go to state 79
    implication                    go to state 80
    booleanTerm                    go to state 81
    booleanFactor                  go to state 82
    booleanSecondary               go to state 83
    booleanPrimary                 go to state 84
    logicalValue                   go to state 85
    relation                       go to state 86
    varIdentifier                  go to state 37
    ifClause                       go to state 87
    procedureIdentifier            go to state 88
    functionDesignator             go to state 89
    switchIdentifier               go to state 90
    designationalExpression        go to state 91
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 24

   87 unconditionalStatement: block .

    $default  reduce using rule 87 (unconditionalStatement)


state 25

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement
   91 conditionalStatement: tlabel . conditionalStatement
   95 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 56
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 57
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    conditionalStatement      go to state 108
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 109
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    gotoStatement             go to state 53


state 26

   86 unconditionalStatement: compoundStatement .

    $default  reduce using rule 86 (unconditionalStatement)


state 27

   11 unlabelledCompound: TOKEN_BEGIN compoundTail .

    $default  reduce using rule 11 (unlabelledCompound)


state 28

    1 blockHead: TOKEN_BEGIN declaration .

    $default  reduce using rule 1 (blockHead)


state 29

   56 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 110


state 30

   17 declaration: arrayDeclaration .

    $default  reduce using rule 17 (declaration)


state 31

   54 variable: simpleVariable .

    $default  reduce using rule 54 (variable)


state 32

  103 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  104                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 111


state 33

   55 variable: subscriptedVariable .

    $default  reduce using rule 55 (variable)


state 34

    7 label: identifier .
   25 arrayIdentifier: identifier .
   84 varIdentifier: identifier .
  108 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 108 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 84 (varIdentifier)
    $default                   reduce using rule 7 (label)


state 35

   30 arrayDeclaration: type . TOKEN_ARRAY arrayList
   83 typeDeclaration: type . listType
  145 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 112
    TOKEN_ARRAY       shift, and go to state 113

    identifier     go to state 114
    listType       go to state 115
    varIdentifier  go to state 116


state 36

   16 declaration: typeDeclaration .

    $default  reduce using rule 16 (declaration)


state 37

   53 simpleVariable: varIdentifier .

    $default  reduce using rule 53 (simpleVariable)


state 38

  117 statement: unconditionalStatement .

    $default  reduce using rule 117 (statement)


state 39

  118 statement: conditionalStatement .

    $default  reduce using rule 118 (statement)


state 40

   88 conditionalStatement: ifStatement .
   89                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 117

    $default  reduce using rule 88 (conditionalStatement)


state 41

   90 conditionalStatement: ifClause . forStatement
   92 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 118
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 119
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 120
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    gotoStatement             go to state 53


state 42

   85 unconditionalStatement: basicStatement .

    $default  reduce using rule 85 (unconditionalStatement)


state 43

   94 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 94 (basicStatement)


state 44

   97 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 97 (unlabelledBasicStatement)


state 45

   99 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 99 (unlabelledBasicStatement)


state 46

   96 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 96 (unlabelledBasicStatement)


state 47

  119 statement: forStatement .

    $default  reduce using rule 119 (statement)


state 48

  101 dummyStatement: empty .

    $default  reduce using rule 101 (dummyStatement)


state 49

   98 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 98 (unlabelledBasicStatement)


state 50

  107 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 121

    actualParameterPart  go to state 122


state 51

   14 compoundTail: statement . TOKEN_END
   15             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 123
    TOKEN_SEMICOLON  shift, and go to state 124


state 52

   19 declaration: procedureDeclaration .

    $default  reduce using rule 19 (declaration)


state 53

  100 unlabelledBasicStatement: gotoStatement .

    $default  reduce using rule 100 (unlabelledBasicStatement)


state 54

   18 declaration: switchDeclaration .

    $default  reduce using rule 18 (declaration)


state 55

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_GOTO          shift, and go to state 16
    TOKEN_FOR           shift, and go to state 17
    TOKEN_IF            shift, and go to state 18
    TOKEN_SWITCH        shift, and go to state 19
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_RETURN        shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    compoundTail              go to state 125
    declaration               go to state 126
    arrayIdentifier           go to state 29
    arrayDeclaration          go to state 30
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    type                      go to state 35
    typeDeclaration           go to state 36
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 51
    procedureDeclaration      go to state 52
    gotoStatement             go to state 53
    switchDeclaration         go to state 54


state 56

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 57

   13 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 13 (compoundStatement)


state 58

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 59

    0 $accept: program $end .

    $default  accept


state 60

   75 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 75 (logicalValue)


state 61

   36 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    term                 go to state 128
    factor               go to state 71
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 62

   37 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    term                 go to state 129
    factor               go to state 71
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 63

   48 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   74 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET
  155 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 63
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 65
    TOKEN_NOT_OP         shift, and go to state 66
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 29
    arithmeticExpression           go to state 130
    simpleArithmeticExpression     go to state 69
    term                           go to state 70
    factor                         go to state 71
    primary                        go to state 72
    unsignedNumber                 go to state 73
    realNumber                     go to state 74
    integer                        go to state 75
    simpleVariable                 go to state 31
    variable                       go to state 76
    subscriptedVariable            go to state 33
    identifier                     go to state 77
    booleanExpression              go to state 131
    simpleBoolean                  go to state 79
    implication                    go to state 80
    booleanTerm                    go to state 81
    booleanFactor                  go to state 82
    booleanSecondary               go to state 83
    booleanPrimary                 go to state 84
    logicalValue                   go to state 85
    relation                       go to state 86
    varIdentifier                  go to state 37
    ifClause                       go to state 87
    procedureIdentifier            go to state 88
    functionDesignator             go to state 89
    switchIdentifier               go to state 90
    designationalExpression        go to state 132
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 64

   51 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 51 (realNumber)


state 65

  153 simpleDesignationalExpression: TOKEN_COLON . label

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3

    label       go to state 133
    integer     go to state 12
    identifier  go to state 13


state 66

   71 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanPrimary              go to state 134
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 67

  120 statement: TOKEN_PRINT expression .

    $default  reduce using rule 120 (statement)


state 68

   31 expression: arithmeticExpression .

    $default  reduce using rule 31 (expression)


state 69

   34 arithmeticExpression: simpleArithmeticExpression .
   38 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   39                           | simpleArithmeticExpression . TOKEN_MINUS term
   76 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 135
    TOKEN_MINUS   shift, and go to state 136
    TOKEN_REL_OP  shift, and go to state 137

    $default  reduce using rule 34 (arithmeticExpression)

    relationalOperator  go to state 138


state 70

   35 simpleArithmeticExpression: term .
   41 term: term . TOKEN_MULTIPLY factor
   42     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 139
    TOKEN_MULTIPLY  shift, and go to state 140

    $default  reduce using rule 35 (simpleArithmeticExpression)


state 71

   40 term: factor .
   44 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 141

    $default  reduce using rule 40 (term)


state 72

   43 factor: primary .

    $default  reduce using rule 43 (factor)


state 73

   45 primary: unsignedNumber .

    $default  reduce using rule 45 (primary)


state 74

   49 unsignedNumber: realNumber .

    $default  reduce using rule 49 (unsignedNumber)


state 75

   50 unsignedNumber: integer .

    $default  reduce using rule 50 (unsignedNumber)


state 76

   47 primary: variable .

    $default  reduce using rule 47 (primary)


state 77

   25 arrayIdentifier: identifier .
   84 varIdentifier: identifier .
  108 procedureIdentifier: identifier .
  150 switchIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 108 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 150 (switchIdentifier)
    $default                   reduce using rule 84 (varIdentifier)


state 78

   32 expression: booleanExpression .

    $default  reduce using rule 32 (expression)


state 79

   61 booleanExpression: simpleBoolean .
   63 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 142

    $default  reduce using rule 61 (booleanExpression)


state 80

   62 simpleBoolean: implication .
   65 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 143

    $default  reduce using rule 62 (simpleBoolean)


state 81

   64 implication: booleanTerm .
   67 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 144

    $default  reduce using rule 64 (implication)


state 82

   66 booleanTerm: booleanFactor .
   69 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 145

    $default  reduce using rule 66 (booleanTerm)


state 83

   68 booleanFactor: booleanSecondary .

    $default  reduce using rule 68 (booleanFactor)


state 84

   70 booleanSecondary: booleanPrimary .

    $default  reduce using rule 70 (booleanSecondary)


state 85

   72 booleanPrimary: logicalValue .

    $default  reduce using rule 72 (booleanPrimary)


state 86

   73 booleanPrimary: relation .

    $default  reduce using rule 73 (booleanPrimary)


state 87

  152 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65

    identifier                     go to state 98
    switchIdentifier               go to state 90
    simpleDesignationalExpression  go to state 146
    switchDesignator               go to state 93


state 88

  116 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 121

    actualParameterPart  go to state 147


state 89

   46 primary: functionDesignator .

    $default  reduce using rule 46 (primary)


state 90

  156 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 148


state 91

   33 expression: designationalExpression .

    $default  reduce using rule 33 (expression)


state 92

  151 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 151 (designationalExpression)


state 93

  154 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 154 (simpleDesignationalExpression)


state 94

  108 procedureIdentifier: identifier .

    $default  reduce using rule 108 (procedureIdentifier)


state 95

  142 procedureHeading: procedureIdentifier . @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

    $default  reduce using rule 140 (@2)

    @2  go to state 149


state 96

  144 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 150
    procedureBody             go to state 151
    gotoStatement             go to state 53


state 97

  155 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 98
    ifClause                       go to state 87
    switchIdentifier               go to state 90
    designationalExpression        go to state 132
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 98

  150 switchIdentifier: identifier .

    $default  reduce using rule 150 (switchIdentifier)


state 99

  146 gotoStatement: TOKEN_GOTO designationalExpression .

    $default  reduce using rule 146 (gotoStatement)


state 100

  105 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 152


state 101

   25 arrayIdentifier: identifier .
   84 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 84 (varIdentifier)
    $default      reduce using rule 25 (arrayIdentifier)


state 102

   48 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   74 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 130
    simpleArithmeticExpression  go to state 69
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanExpression           go to state 131
    simpleBoolean               go to state 79
    implication                 go to state 80
    booleanTerm                 go to state 81
    booleanFactor               go to state 82
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 103

   38 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   39                           | simpleArithmeticExpression . TOKEN_MINUS term
   76 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 135
    TOKEN_MINUS   shift, and go to state 136
    TOKEN_REL_OP  shift, and go to state 137

    relationalOperator  go to state 138


state 104

   25 arrayIdentifier: identifier .
   84 varIdentifier: identifier .
  108 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 108 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    $default                   reduce using rule 84 (varIdentifier)


state 105

   93 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 153


state 106

  147 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 154


state 107

  102 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 102 (returnStatement)


state 108

   91 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 91 (conditionalStatement)


state 109

   95 basicStatement: tlabel basicStatement .

    $default  reduce using rule 95 (basicStatement)


state 110

   56 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 155
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    subscriptList               go to state 157
    subscriptExpression         go to state 158
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 111

  103 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  104                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 159
    simpleArithmeticExpression  go to state 69
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanExpression           go to state 160
    simpleBoolean               go to state 79
    implication                 go to state 80
    booleanTerm                 go to state 81
    booleanFactor               go to state 82
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 112

  145 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 94
    procedureIdentifier  go to state 95
    procedureHeading     go to state 161


state 113

   30 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 162
    arraySegment     go to state 163
    arrayList        go to state 164
    identifier       go to state 165


state 114

   84 varIdentifier: identifier .

    $default  reduce using rule 84 (varIdentifier)


state 115

   79 listType: listType . TOKEN_COMMA varIdentifier
   83 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 166

    $default  reduce using rule 83 (typeDeclaration)


state 116

   78 listType: varIdentifier .

    $default  reduce using rule 78 (listType)


state 117

   89 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 167
    gotoStatement             go to state 53


state 118

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement
   95 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 56
    tlabel                    go to state 118
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 57
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    basicStatement            go to state 109
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    gotoStatement             go to state 53


state 119

   92 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 92 (ifStatement)


state 120

   90 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 90 (conditionalStatement)


state 121

  109 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  110                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 63
    TOKEN_CLOSE_BRACKET  shift, and go to state 168
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 65
    TOKEN_NOT_OP         shift, and go to state 66
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 29
    expression                     go to state 169
    arithmeticExpression           go to state 68
    simpleArithmeticExpression     go to state 69
    term                           go to state 70
    factor                         go to state 71
    primary                        go to state 72
    unsignedNumber                 go to state 73
    realNumber                     go to state 74
    integer                        go to state 75
    simpleVariable                 go to state 31
    variable                       go to state 76
    subscriptedVariable            go to state 33
    identifier                     go to state 77
    booleanExpression              go to state 78
    simpleBoolean                  go to state 79
    implication                    go to state 80
    booleanTerm                    go to state 81
    booleanFactor                  go to state 82
    booleanSecondary               go to state 83
    booleanPrimary                 go to state 84
    logicalValue                   go to state 85
    relation                       go to state 86
    varIdentifier                  go to state 37
    ifClause                       go to state 87
    procedureIdentifier            go to state 88
    actualParameterList            go to state 170
    actualParameter                go to state 171
    functionDesignator             go to state 89
    switchIdentifier               go to state 90
    designationalExpression        go to state 91
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 122

  107 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 107 (procedureStatement)


state 123

   14 compoundTail: statement TOKEN_END .

    $default  reduce using rule 14 (compoundTail)


state 124

   15 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    compoundTail              go to state 172
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 51
    gotoStatement             go to state 53


state 125

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 126

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 127

   48 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 130
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 128

   36 simpleArithmeticExpression: TOKEN_PLUS term .
   41 term: term . TOKEN_MULTIPLY factor
   42     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 139
    TOKEN_MULTIPLY  shift, and go to state 140

    $default  reduce using rule 36 (simpleArithmeticExpression)


state 129

   37 simpleArithmeticExpression: TOKEN_MINUS term .
   41 term: term . TOKEN_MULTIPLY factor
   42     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 139
    TOKEN_MULTIPLY  shift, and go to state 140

    $default  reduce using rule 37 (simpleArithmeticExpression)


state 130

   48 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 173


state 131

   74 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 174


state 132

  155 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 175


state 133

  153 simpleDesignationalExpression: TOKEN_COLON label .

    $default  reduce using rule 153 (simpleDesignationalExpression)


state 134

   71 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 71 (booleanSecondary)


state 135

   38 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    term                 go to state 176
    factor               go to state 71
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 136

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    term                 go to state 177
    factor               go to state 71
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 137

   77 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 77 (relationalOperator)


state 138

   76 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 178
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 139

   42 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    factor               go to state 179
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 140

   41 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    factor               go to state 180
    primary              go to state 72
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 141

   44 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 29
    primary              go to state 181
    unsignedNumber       go to state 73
    realNumber           go to state 74
    integer              go to state 75
    simpleVariable       go to state 31
    variable             go to state 76
    subscriptedVariable  go to state 33
    identifier           go to state 104
    varIdentifier        go to state 37
    procedureIdentifier  go to state 88
    functionDesignator   go to state 89


state 142

   63 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    implication                 go to state 182
    booleanTerm                 go to state 81
    booleanFactor               go to state 82
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 143

   65 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanTerm                 go to state 183
    booleanFactor               go to state 82
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 144

   67 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanFactor               go to state 184
    booleanSecondary            go to state 83
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 145

   69 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 102
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 66

    arrayIdentifier             go to state 29
    simpleArithmeticExpression  go to state 103
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    booleanSecondary            go to state 185
    booleanPrimary              go to state 84
    logicalValue                go to state 85
    relation                    go to state 86
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 146

  152 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 186


state 147

  116 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 116 (functionDesignator)


state 148

  156 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 155
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    subscriptExpression         go to state 187
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 149

  142 procedureHeading: procedureIdentifier @2 . formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 188

    $default  reduce using rule 106 (empty)

    empty                go to state 189
    formalParameterPart  go to state 190


state 150

  143 procedureBody: statement .

    $default  reduce using rule 143 (procedureBody)


state 151

  144 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 144 (procedureDeclaration)


state 152

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 191
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 153

   93 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 93 (ifClause)


state 154

  147 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 98
    ifClause                       go to state 87
    switchList                     go to state 192
    switchIdentifier               go to state 90
    designationalExpression        go to state 193
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 155

   59 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 59 (subscriptExpression)


state 156

   34 arithmeticExpression: simpleArithmeticExpression .
   38 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   39                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 135
    TOKEN_MINUS  shift, and go to state 136

    $default  reduce using rule 34 (arithmeticExpression)


state 157

   56 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   58 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 194
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 195


state 158

   57 subscriptList: subscriptExpression .

    $default  reduce using rule 57 (subscriptList)


state 159

  103 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 103 (assignmentStatement)


state 160

  104 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 104 (assignmentStatement)


state 161

  145 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 150
    procedureBody             go to state 196
    gotoStatement             go to state 53


state 162

   26 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 197
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 198


state 163

   28 arrayList: arraySegment .

    $default  reduce using rule 28 (arrayList)


state 164

   29 arrayList: arrayList . TOKEN_COMMA arraySegment
   30 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 199

    $default  reduce using rule 30 (arrayDeclaration)


state 165

   25 arrayIdentifier: identifier .

    $default  reduce using rule 25 (arrayIdentifier)


state 166

   79 listType: listType TOKEN_COMMA . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 114
    varIdentifier  go to state 200


state 167

   89 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 89 (conditionalStatement)


state 168

  109 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 109 (actualParameterPart)


state 169

  113 actualParameter: expression .

    $default  reduce using rule 113 (actualParameter)


state 170

  110 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  112 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 201
    TOKEN_CLOSE_BRACKET  shift, and go to state 202

    parameterDelimiter  go to state 203


state 171

  111 actualParameterList: actualParameter .

    $default  reduce using rule 111 (actualParameterList)


state 172

   15 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 15 (compoundTail)


state 173

   48 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 48 (primary)


state 174

   74 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 74 (booleanPrimary)


state 175

  155 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 155 (simpleDesignationalExpression)


state 176

   38 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   41 term: term . TOKEN_MULTIPLY factor
   42     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 139
    TOKEN_MULTIPLY  shift, and go to state 140

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 177

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   41 term: term . TOKEN_MULTIPLY factor
   42     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 139
    TOKEN_MULTIPLY  shift, and go to state 140

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 178

   38 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   39                           | simpleArithmeticExpression . TOKEN_MINUS term
   76 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 135
    TOKEN_MINUS  shift, and go to state 136

    $default  reduce using rule 76 (relation)


state 179

   42 term: term TOKEN_DIVIDE factor .
   44 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 141

    $default  reduce using rule 42 (term)


state 180

   41 term: term TOKEN_MULTIPLY factor .
   44 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 141

    $default  reduce using rule 41 (term)


state 181

   44 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 44 (factor)


state 182

   63 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   65 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 143

    $default  reduce using rule 63 (simpleBoolean)


state 183

   65 implication: implication TOKEN_IMPLY booleanTerm .
   67 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 144

    $default  reduce using rule 65 (implication)


state 184

   67 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   69 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 145

    $default  reduce using rule 67 (booleanTerm)


state 185

   69 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 69 (booleanFactor)


state 186

  152 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 98
    ifClause                       go to state 87
    switchIdentifier               go to state 90
    designationalExpression        go to state 204
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 187

  156 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 205


state 188

  126 formalParameterPart: TOKEN_OPEN_BRACKET . $@1 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 125 ($@1)

    $@1  go to state 206


state 189

  124 formalParameterPart: empty .

    $default  reduce using rule 124 (formalParameterPart)


state 190

  142 procedureHeading: procedureIdentifier @2 formalParameterPart . TOKEN_SEMICOLON $@3 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 207


state 191

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 208


state 192

  147 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .
  149 switchList: switchList . TOKEN_COMMA designationalExpression

    TOKEN_COMMA  shift, and go to state 209

    $default  reduce using rule 147 (switchDeclaration)


state 193

  148 switchList: designationalExpression .

    $default  reduce using rule 148 (switchList)


state 194

   58 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 155
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    subscriptExpression         go to state 210
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 195

   56 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 56 (subscriptedVariable)


state 196

  145 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 145 (procedureDeclaration)


state 197

   27 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 162
    arraySegment     go to state 211
    identifier       go to state 165


state 198

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 212
    boundPair                   go to state 213
    boundPairList               go to state 214
    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 215
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 199

   29 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 162
    arraySegment     go to state 216
    identifier       go to state 165


state 200

   79 listType: listType TOKEN_COMMA varIdentifier .

    $default  reduce using rule 79 (listType)


state 201

  114 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 114 (parameterDelimiter)


state 202

  110 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  115 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 110 (actualParameterPart)

    identifier  go to state 217


state 203

  112 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 60
    TOKEN_PLUS           shift, and go to state 61
    TOKEN_MINUS          shift, and go to state 62
    TOKEN_OPEN_BRACKET   shift, and go to state 63
    TOKEN_REAL_NUM       shift, and go to state 64
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 65
    TOKEN_NOT_OP         shift, and go to state 66
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 29
    expression                     go to state 169
    arithmeticExpression           go to state 68
    simpleArithmeticExpression     go to state 69
    term                           go to state 70
    factor                         go to state 71
    primary                        go to state 72
    unsignedNumber                 go to state 73
    realNumber                     go to state 74
    integer                        go to state 75
    simpleVariable                 go to state 31
    variable                       go to state 76
    subscriptedVariable            go to state 33
    identifier                     go to state 77
    booleanExpression              go to state 78
    simpleBoolean                  go to state 79
    implication                    go to state 80
    booleanTerm                    go to state 81
    booleanFactor                  go to state 82
    booleanSecondary               go to state 83
    booleanPrimary                 go to state 84
    logicalValue                   go to state 85
    relation                       go to state 86
    varIdentifier                  go to state 37
    ifClause                       go to state 87
    procedureIdentifier            go to state 88
    actualParameter                go to state 218
    functionDesignator             go to state 89
    switchIdentifier               go to state 90
    designationalExpression        go to state 91
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 204

  152 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 152 (designationalExpression)


state 205

  156 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 156 (switchDesignator)


state 206

  126 formalParameterPart: TOKEN_OPEN_BRACKET $@1 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 219
    formalParameter      go to state 220
    formalParameterList  go to state 221


state 207

  142 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON . $@3 valuePart specificationPart

    $default  reduce using rule 141 ($@3)

    $@3  go to state 222


state 208

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 223
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 209

  149 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 97
    TOKEN_COLON         shift, and go to state 65
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 98
    ifClause                       go to state 87
    switchIdentifier               go to state 90
    designationalExpression        go to state 224
    simpleDesignationalExpression  go to state 92
    switchDesignator               go to state 93


state 210

   58 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 58 (subscriptList)


state 211

   27 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 27 (arraySegment)


state 212

   22 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 225


state 213

   23 boundPairList: boundPair .

    $default  reduce using rule 23 (boundPairList)


state 214

   24 boundPairList: boundPairList . TOKEN_COMMA boundPair
   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 226
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 227


state 215

   20 lowerBound: arithmeticExpression .

    $default  reduce using rule 20 (lowerBound)


state 216

   29 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 29 (arrayList)


state 217

  115 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 228


state 218

  112 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 112 (actualParameterList)


state 219

  121 formalParameter: identifier .

    $default  reduce using rule 121 (formalParameter)


state 220

  122 formalParameterList: formalParameter .

    $default  reduce using rule 122 (formalParameterList)


state 221

  123 formalParameterList: formalParameterList . parameterDelimiter formalParameter
  126 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 201
    TOKEN_CLOSE_BRACKET  shift, and go to state 229

    parameterDelimiter  go to state 230


state 222

  142 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 231

    $default  reduce using rule 106 (empty)

    empty      go to state 232
    valuePart  go to state 233


state 223

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 234


state 224

  149 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 149 (switchList)


state 225

   22 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    upperBound                  go to state 235
    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 236
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 226

   24 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 212
    boundPair                   go to state 237
    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 215
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 227

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 26 (arraySegment)


state 228

  115 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 238


state 229

  115 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  126 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 126 (formalParameterPart)

    identifier  go to state 217


state 230

  123 formalParameterList: formalParameterList parameterDelimiter . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 219
    formalParameter  go to state 239


state 231

  129 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 240
    identifierList  go to state 241


state 232

  130 valuePart: empty .

    $default  reduce using rule 130 (valuePart)


state 233

  142 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 242
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_TYPE_LABEL    shift, and go to state 243

    $default  reduce using rule 106 (empty)

    type                         go to state 244
    empty                        go to state 245
    specifier                    go to state 246
    specificationPart            go to state 247
    specificationIdentifierList  go to state 248


state 234

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 61
    TOKEN_MINUS         shift, and go to state 62
    TOKEN_OPEN_BRACKET  shift, and go to state 127
    TOKEN_REAL_NUM      shift, and go to state 64
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 29
    arithmeticExpression        go to state 249
    simpleArithmeticExpression  go to state 156
    term                        go to state 70
    factor                      go to state 71
    primary                     go to state 72
    unsignedNumber              go to state 73
    realNumber                  go to state 74
    integer                     go to state 75
    simpleVariable              go to state 31
    variable                    go to state 76
    subscriptedVariable         go to state 33
    identifier                  go to state 104
    varIdentifier               go to state 37
    procedureIdentifier         go to state 88
    functionDesignator          go to state 89


state 235

   22 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 22 (boundPair)


state 236

   21 upperBound: arithmeticExpression .

    $default  reduce using rule 21 (upperBound)


state 237

   24 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 24 (boundPairList)


state 238

  115 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 115 (parameterDelimiter)


state 239

  123 formalParameterList: formalParameterList parameterDelimiter formalParameter .

    $default  reduce using rule 123 (formalParameterList)


state 240

  127 identifierList: identifier .

    $default  reduce using rule 127 (identifierList)


state 241

  128 identifierList: identifierList . TOKEN_COMMA identifier
  129 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 250
    TOKEN_SEMICOLON  shift, and go to state 251


state 242

  134 specifier: TOKEN_SWITCH .

    $default  reduce using rule 134 (specifier)


state 243

  133 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 133 (specifier)


state 244

  131 specifier: type .
  132          | type . TOKEN_ARRAY
  135          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 252
    TOKEN_ARRAY      shift, and go to state 253

    $default  reduce using rule 131 (specifier)


state 245

  136 specificationPart: empty .

    $default  reduce using rule 136 (specificationPart)


state 246

  138 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 240
    identifierList  go to state 254


state 247

  142 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart .

    $default  reduce using rule 142 (procedureHeading)


state 248

  137 specificationPart: specificationIdentifierList .
  139 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 242
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_TYPE_LABEL    shift, and go to state 243

    $default  reduce using rule 137 (specificationPart)

    type       go to state 244
    specifier  go to state 255


state 249

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 256


state 250

  128 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 257


state 251

  129 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 129 (valuePart)


state 252

  135 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 135 (specifier)


state 253

  132 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 132 (specifier)


state 254

  128 identifierList: identifierList . TOKEN_COMMA identifier
  138 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 250
    TOKEN_SEMICOLON  shift, and go to state 258


state 255

  139 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 240
    identifierList  go to state 259


state 256

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 23

    $default  reduce using rule 106 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 24
    tlabel                    go to state 25
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 26
    arrayIdentifier           go to state 29
    integer                   go to state 12
    simpleVariable            go to state 31
    variable                  go to state 32
    subscriptedVariable       go to state 33
    identifier                go to state 34
    varIdentifier             go to state 37
    unconditionalStatement    go to state 38
    conditionalStatement      go to state 39
    ifStatement               go to state 40
    ifClause                  go to state 41
    basicStatement            go to state 42
    unlabelledBasicStatement  go to state 43
    dummyStatement            go to state 44
    returnStatement           go to state 45
    assignmentStatement       go to state 46
    forStatement              go to state 47
    empty                     go to state 48
    procedureStatement        go to state 49
    procedureIdentifier       go to state 50
    statement                 go to state 260
    gotoStatement             go to state 53


state 257

  128 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 128 (identifierList)


state 258

  138 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 138 (specificationIdentifierList)


state 259

  128 identifierList: identifierList . TOKEN_COMMA identifier
  139 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 250
    TOKEN_SEMICOLON  shift, and go to state 261


state 260

  105 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 105 (forStatement)


state 261

  139 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 139 (specificationIdentifierList)
