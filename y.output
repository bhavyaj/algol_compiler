Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 blockHead: TOKEN_BEGIN declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 @1: /* empty */

   12 unlabelledCompound: TOKEN_BEGIN @1

   13 compoundStatement: unlabelledCompound
   14                  | tlabel compoundStatement

   15 compoundTail: statement TOKEN_END
   16             | statement TOKEN_SEMICOLON compoundTail

   17 declaration: typeDeclaration
   18            | arrayDeclaration
   19            | switchDeclaration
   20            | procedureDeclaration

   21 lowerBound: arithmeticExpression

   22 switchList: designationalExpression
   23           | switchList TOKEN_COMMA designationalExpression

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

   25 upperBound: arithmeticExpression

   26 boundPair: lowerBound TOKEN_COLON upperBound

   27 boundPairList: boundPair
   28              | boundPairList TOKEN_COMMA boundPair

   29 arrayIdentifier: identifier

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   31             | arrayIdentifier TOKEN_COMMA arraySegment

   32 arrayList: arraySegment
   33          | arrayList TOKEN_COMMA arraySegment

   34 arrayDeclaration: TOKEN_ARRAY arrayList
   35                 | type TOKEN_ARRAY arrayList

   36 expression: arithmeticExpression
   37           | booleanExpression
   38           | designationalExpression

   39 switchIdentifier: identifier

   40 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

   41 simpleDesignationalExpression: tlabel
   42                              | switchDesignator
   43                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

   44 designationalExpression: simpleDesignationalExpression
   45                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

   46 arithmeticExpression: simpleArithmeticExpression

   47 simpleArithmeticExpression: term
   48                           | TOKEN_PLUS term
   49                           | TOKEN_MINUS term
   50                           | simpleArithmeticExpression TOKEN_PLUS term
   51                           | simpleArithmeticExpression TOKEN_MINUS term

   52 term: factor
   53     | term TOKEN_MULTIPLY factor
   54     | term TOKEN_DIVIDE factor

   55 factor: primary
   56       | factor TOKEN_POWER primary

   57 primary: unsignedNumber
   58        | functionDesignator
   59        | variable
   60        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   61 unsignedNumber: realNumber
   62               | integer

   63 realNumber: TOKEN_REAL_NUM

   64 integer: TOKEN_INTEGER

   65 simpleVariable: varIdentifier

   66 variable: simpleVariable
   67         | subscriptedVariable

   68 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   69 subscriptList: subscriptExpression
   70              | subscriptList TOKEN_COMMA subscriptExpression

   71 subscriptExpression: arithmeticExpression

   72 identifier: TOKEN_IDENTIFIER

   73 booleanExpression: simpleBoolean

   74 simpleBoolean: implication
   75              | simpleBoolean TOKEN_EQUIV implication

   76 implication: booleanTerm
   77            | implication TOKEN_IMPLY booleanTerm

   78 booleanTerm: booleanFactor
   79            | booleanTerm TOKEN_OR_OP booleanFactor

   80 booleanFactor: booleanSecondary
   81              | booleanFactor TOKEN_AND_OP booleanSecondary

   82 booleanSecondary: booleanPrimary
   83                 | TOKEN_NOT_OP booleanPrimary

   84 booleanPrimary: logicalValue
   85               | relation
   86               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   87 logicalValue: TOKEN_LOGICAL_VALUE

   88 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   89 relationalOperator: TOKEN_REL_OP

   90 listType: varIdentifier
   91         | listType TOKEN_COMMA varIdentifier

   92 type: TOKEN_TYPE_REAL
   93     | TOKEN_TYPE_INTEGER
   94     | TOKEN_TYPE_BOOLEAN

   95 typeDeclaration: type listType

   96 varIdentifier: identifier

   97 unconditionalStatement: basicStatement
   98                       | compoundStatement
   99                       | block

  100 conditionalStatement: ifStatement
  101                     | ifStatement TOKEN_ELSE statement
  102                     | ifClause forStatement
  103                     | tlabel conditionalStatement

  104 ifStatement: ifClause unconditionalStatement

  105 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

  106 basicStatement: unlabelledBasicStatement
  107               | tlabel basicStatement

  108 unlabelledBasicStatement: assignmentStatement
  109                         | dummyStatement
  110                         | procedureStatement
  111                         | returnStatement

  112 dummyStatement: empty

  113 returnStatement: TOKEN_RETURN expression

  114 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  115                    | variable TOKEN_ASSIGN booleanExpression

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  117 empty: /* empty */

  118 procedureStatement: procedureIdentifier actualParameterPart

  119 procedureIdentifier: identifier

  120 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  121                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  122 actualParameterList: actualParameter
  123                    | actualParameterList parameterDelimiter actualParameter

  124 actualParameter: expression

  125 parameterDelimiter: TOKEN_COMMA
  126                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  127 functionDesignator: procedureIdentifier actualParameterPart

  128 statement: unconditionalStatement
  129          | conditionalStatement
  130          | forStatement
  131          | TOKEN_PRINT expression

  132 formalParameter: identifier

  133 formalParameterList: formalParameter
  134                    | formalParameterList parameterDelimiter formalParameter

  135 formalParameterPart: empty

  136 $@2: /* empty */

  137 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList TOKEN_CLOSE_BRACKET

  138 identifierList: identifier
  139               | identifierList TOKEN_COMMA identifier

  140 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  141          | empty

  142 specifier: type
  143          | type TOKEN_ARRAY
  144          | TOKEN_TYPE_LABEL
  145          | TOKEN_SWITCH
  146          | type TOKEN_PROCEDURE

  147 specificationPart: empty
  148                  | specificationIdentifierList

  149 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  150                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  151 @3: /* empty */

  152 $@4: /* empty */

  153 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

  154 procedureBody: statement

  155 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  156                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 131
TOKEN_IDENTIFIER (259) 72
TOKEN_BEGIN (260) 1 12
TOKEN_END (261) 15
TOKEN_LOGICAL_VALUE (262) 87
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 146 155 156
TOKEN_PLUS (266) 48 50
TOKEN_MINUS (267) 49 51
TOKEN_DIVIDE (268) 54
TOKEN_POWER (269) 56
TOKEN_MULTIPLY (270) 53
TOKEN_COMMA (271) 23 28 31 33 70 91 125 139
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 43 60 86 120 121 126 137
TOKEN_CLOSE_BRACKET (277) 43 60 86 120 121 126 137
TOKEN_OPEN_SQUARE_BRACKET (278) 30 68
TOKEN_CLOSE_SQUARE_BRACKET (279) 30 68
TOKEN_OPEN_CURLY_BRACKET (280) 40
TOKEN_CLOSE_CURLY_BRACKET (281) 40
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 63
TOKEN_INTEGER (284) 64
TOKEN_COLON (285) 6 26 126
TOKEN_REL_OP (286) 89
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 75
TOKEN_AND_OP (294) 81
TOKEN_OR_OP (295) 79
TOKEN_NOT_OP (296) 83
TOKEN_GOTO (297)
TOKEN_FOR (298) 116
TOKEN_DO (299) 116
TOKEN_WHILE (300)
TOKEN_STEP (301) 116
TOKEN_UNTIL (302) 116
TOKEN_IF (303) 105
TOKEN_THEN (304) 105
TOKEN_ELSE (305) 45 101
TOKEN_SWITCH (306) 24 145
TOKEN_VALUE (307) 140
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 93
TOKEN_TYPE_REAL (311) 92
TOKEN_TYPE_BOOLEAN (312) 94
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 144
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 34 35 143
TOKEN_IMPLY (320) 77
TOKEN_SEMICOLON (321) 2 3 16 140 149 150 153
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 113
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 24 114 115 116
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 1 2, on right: 2 3
unlabelledBlock (76)
    on left: 3, on right: 4
block (77)
    on left: 4 5, on right: 5 10 99
tlabel (78)
    on left: 6, on right: 5 14 41 103 107
label (79)
    on left: 7 8, on right: 6
program (80)
    on left: 9 10, on right: 0
unlabelledCompound (81)
    on left: 12, on right: 13
@1 (82)
    on left: 11, on right: 12
compoundStatement (83)
    on left: 13 14, on right: 9 14 98
compoundTail (84)
    on left: 15 16, on right: 3 16
declaration (85)
    on left: 17 18 19 20, on right: 1 2
lowerBound (86)
    on left: 21, on right: 26
switchList (87)
    on left: 22 23, on right: 23 24
switchDeclaration (88)
    on left: 24, on right: 19
upperBound (89)
    on left: 25, on right: 26
boundPair (90)
    on left: 26, on right: 27 28
boundPairList (91)
    on left: 27 28, on right: 28 30
arrayIdentifier (92)
    on left: 29, on right: 30 31 68
arraySegment (93)
    on left: 30 31, on right: 31 32 33
arrayList (94)
    on left: 32 33, on right: 33 34 35
arrayDeclaration (95)
    on left: 34 35, on right: 18
expression (96)
    on left: 36 37 38, on right: 113 124 131
switchIdentifier (97)
    on left: 39, on right: 24 40
switchDesignator (98)
    on left: 40, on right: 42
simpleDesignationalExpression (99)
    on left: 41 42 43, on right: 44 45
designationalExpression (100)
    on left: 44 45, on right: 22 23 38 43 45
arithmeticExpression (101)
    on left: 46, on right: 21 25 36 60 71 114 116
simpleArithmeticExpression (102)
    on left: 47 48 49 50 51, on right: 46 50 51 88
term (103)
    on left: 52 53 54, on right: 47 48 49 50 51 53 54
factor (104)
    on left: 55 56, on right: 52 53 54 56
primary (105)
    on left: 57 58 59 60, on right: 55 56
unsignedNumber (106)
    on left: 61 62, on right: 57
realNumber (107)
    on left: 63, on right: 61
integer (108)
    on left: 64, on right: 8 62
simpleVariable (109)
    on left: 65, on right: 66
variable (110)
    on left: 66 67, on right: 59 114 115 116
subscriptedVariable (111)
    on left: 68, on right: 67
subscriptList (112)
    on left: 69 70, on right: 68 70
subscriptExpression (113)
    on left: 71, on right: 40 69 70
identifier (114)
    on left: 72, on right: 7 29 39 96 119 126 132 138 139
booleanExpression (115)
    on left: 73, on right: 37 86 105 115
simpleBoolean (116)
    on left: 74 75, on right: 73 75
implication (117)
    on left: 76 77, on right: 74 75 77
booleanTerm (118)
    on left: 78 79, on right: 76 77 79
booleanFactor (119)
    on left: 80 81, on right: 78 79 81
booleanSecondary (120)
    on left: 82 83, on right: 80 81
booleanPrimary (121)
    on left: 84 85 86, on right: 82 83
logicalValue (122)
    on left: 87, on right: 84
relation (123)
    on left: 88, on right: 85
relationalOperator (124)
    on left: 89, on right: 88
listType (125)
    on left: 90 91, on right: 91 95
type (126)
    on left: 92 93 94, on right: 35 95 142 143 146 156
typeDeclaration (127)
    on left: 95, on right: 17
varIdentifier (128)
    on left: 96, on right: 65 90 91
unconditionalStatement (129)
    on left: 97 98 99, on right: 104 128
conditionalStatement (130)
    on left: 100 101 102 103, on right: 103 129
ifStatement (131)
    on left: 104, on right: 100 101
ifClause (132)
    on left: 105, on right: 45 102 104
basicStatement (133)
    on left: 106 107, on right: 97 107
unlabelledBasicStatement (134)
    on left: 108 109 110 111, on right: 106
dummyStatement (135)
    on left: 112, on right: 109
returnStatement (136)
    on left: 113, on right: 111
assignmentStatement (137)
    on left: 114 115, on right: 108
forStatement (138)
    on left: 116, on right: 102 130
empty (139)
    on left: 117, on right: 112 135 141 147
procedureStatement (140)
    on left: 118, on right: 110
procedureIdentifier (141)
    on left: 119, on right: 118 127 153
actualParameterPart (142)
    on left: 120 121, on right: 118 127
actualParameterList (143)
    on left: 122 123, on right: 121 123
actualParameter (144)
    on left: 124, on right: 122 123
parameterDelimiter (145)
    on left: 125 126, on right: 123 134
functionDesignator (146)
    on left: 127, on right: 58
statement (147)
    on left: 128 129 130 131, on right: 15 16 101 116 154
formalParameter (148)
    on left: 132, on right: 133 134
formalParameterList (149)
    on left: 133 134, on right: 134 137
formalParameterPart (150)
    on left: 135 137, on right: 153
$@2 (151)
    on left: 136, on right: 137
identifierList (152)
    on left: 138 139, on right: 139 140 149 150
valuePart (153)
    on left: 140 141, on right: 153
specifier (154)
    on left: 142 143 144 145 146, on right: 149 150
specificationPart (155)
    on left: 147 148, on right: 153
specificationIdentifierList (156)
    on left: 149 150, on right: 148 150
procedureHeading (157)
    on left: 153, on right: 155 156
@3 (158)
    on left: 151, on right: 153
$@4 (159)
    on left: 152, on right: 153
procedureBody (160)
    on left: 154, on right: 155 156
procedureDeclaration (161)
    on left: 155 156, on right: 20


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   72 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 72 (identifier)


state 2

    1 blockHead: TOKEN_BEGIN . declaration
   12 unlabelledCompound: TOKEN_BEGIN . @1

    TOKEN_PROCEDURE     shift, and go to state 14
    TOKEN_SWITCH        shift, and go to state 15
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_ARRAY         shift, and go to state 19

    $default  reduce using rule 11 (@1)

    @1                    go to state 20
    declaration           go to state 21
    switchDeclaration     go to state 22
    arrayDeclaration      go to state 23
    type                  go to state 24
    typeDeclaration       go to state 25
    procedureDeclaration  go to state 26


state 3

   64 integer: TOKEN_INTEGER .

    $default  reduce using rule 64 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 27


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 28
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 29
    integer             go to state 12
    identifier          go to state 13


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 30


state 9

    0 $accept: program . $end

    $end  shift, and go to state 31


state 10

   13 compoundStatement: unlabelledCompound .

    $default  reduce using rule 13 (compoundStatement)


state 11

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 12

    8 label: integer .

    $default  reduce using rule 8 (label)


state 13

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 14

  155 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 32
    procedureIdentifier  go to state 33
    procedureHeading     go to state 34


state 15

   24 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    switchIdentifier  go to state 35
    identifier        go to state 36


state 16

   93 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 93 (type)


state 17

   92 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 92 (type)


state 18

   94 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 94 (type)


state 19

   34 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 37
    arraySegment     go to state 38
    arrayList        go to state 39
    identifier       go to state 40


state 20

   12 unlabelledCompound: TOKEN_BEGIN @1 .

    $default  reduce using rule 12 (unlabelledCompound)


state 21

    1 blockHead: TOKEN_BEGIN declaration .

    $default  reduce using rule 1 (blockHead)


state 22

   19 declaration: switchDeclaration .

    $default  reduce using rule 19 (declaration)


state 23

   18 declaration: arrayDeclaration .

    $default  reduce using rule 18 (declaration)


state 24

   35 arrayDeclaration: type . TOKEN_ARRAY arrayList
   95 typeDeclaration: type . listType
  156 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 41
    TOKEN_ARRAY       shift, and go to state 42

    identifier     go to state 43
    listType       go to state 44
    varIdentifier  go to state 45


state 25

   17 declaration: typeDeclaration .

    $default  reduce using rule 17 (declaration)


state 26

   20 declaration: procedureDeclaration .

    $default  reduce using rule 20 (declaration)


state 27

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 46
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 14
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 47
    TOKEN_IF            shift, and go to state 48
    TOKEN_SWITCH        shift, and go to state 15
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_ARRAY         shift, and go to state 19
    TOKEN_RETURN        shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    compoundTail              go to state 53
    declaration               go to state 54
    switchDeclaration         go to state 22
    arrayIdentifier           go to state 55
    arrayDeclaration          go to state 23
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    type                      go to state 24
    typeDeclaration           go to state 25
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 74
    procedureDeclaration      go to state 26


state 28

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 29

   14 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 14 (compoundStatement)


state 30

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 31

    0 $accept: program $end .

    $default  accept


state 32

  119 procedureIdentifier: identifier .

    $default  reduce using rule 119 (procedureIdentifier)


state 33

  153 procedureHeading: procedureIdentifier . @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

    $default  reduce using rule 151 (@3)

    @3  go to state 75


state 34

  155 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 46
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 76
    procedureBody             go to state 77


state 35

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 78


state 36

   39 switchIdentifier: identifier .

    $default  reduce using rule 39 (switchIdentifier)


state 37

   30 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   31             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 79
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 80


state 38

   32 arrayList: arraySegment .

    $default  reduce using rule 32 (arrayList)


state 39

   33 arrayList: arrayList . TOKEN_COMMA arraySegment
   34 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 81

    $default  reduce using rule 34 (arrayDeclaration)


state 40

   29 arrayIdentifier: identifier .

    $default  reduce using rule 29 (arrayIdentifier)


state 41

  156 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 32
    procedureIdentifier  go to state 33
    procedureHeading     go to state 82


state 42

   35 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 37
    arraySegment     go to state 38
    arrayList        go to state 83
    identifier       go to state 40


state 43

   96 varIdentifier: identifier .

    $default  reduce using rule 96 (varIdentifier)


state 44

   91 listType: listType . TOKEN_COMMA varIdentifier
   95 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 84

    $default  reduce using rule 95 (typeDeclaration)


state 45

   90 listType: varIdentifier .

    $default  reduce using rule 90 (listType)


state 46

  131 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 88
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90
    TOKEN_IF             shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    arrayIdentifier                go to state 55
    expression                     go to state 92
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 96
    arithmeticExpression           go to state 97
    simpleArithmeticExpression     go to state 98
    term                           go to state 99
    factor                         go to state 100
    primary                        go to state 101
    unsignedNumber                 go to state 102
    realNumber                     go to state 103
    integer                        go to state 104
    simpleVariable                 go to state 56
    variable                       go to state 105
    subscriptedVariable            go to state 58
    identifier                     go to state 106
    booleanExpression              go to state 107
    simpleBoolean                  go to state 108
    implication                    go to state 109
    booleanTerm                    go to state 110
    booleanFactor                  go to state 111
    booleanSecondary               go to state 112
    booleanPrimary                 go to state 113
    logicalValue                   go to state 114
    relation                       go to state 115
    varIdentifier                  go to state 60
    ifClause                       go to state 116
    procedureIdentifier            go to state 117
    functionDesignator             go to state 118


state 47

  116 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 55
    simpleVariable       go to state 56
    variable             go to state 119
    subscriptedVariable  go to state 58
    identifier           go to state 120
    varIdentifier        go to state 60


state 48

  105 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanExpression           go to state 125
    simpleBoolean               go to state 108
    implication                 go to state 109
    booleanTerm                 go to state 110
    booleanFactor               go to state 111
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 49

  113 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 88
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90
    TOKEN_IF             shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    arrayIdentifier                go to state 55
    expression                     go to state 126
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 96
    arithmeticExpression           go to state 97
    simpleArithmeticExpression     go to state 98
    term                           go to state 99
    factor                         go to state 100
    primary                        go to state 101
    unsignedNumber                 go to state 102
    realNumber                     go to state 103
    integer                        go to state 104
    simpleVariable                 go to state 56
    variable                       go to state 105
    subscriptedVariable            go to state 58
    identifier                     go to state 106
    booleanExpression              go to state 107
    simpleBoolean                  go to state 108
    implication                    go to state 109
    booleanTerm                    go to state 110
    booleanFactor                  go to state 111
    booleanSecondary               go to state 112
    booleanPrimary                 go to state 113
    logicalValue                   go to state 114
    relation                       go to state 115
    varIdentifier                  go to state 60
    ifClause                       go to state 116
    procedureIdentifier            go to state 117
    functionDesignator             go to state 118


state 50

   99 unconditionalStatement: block .

    $default  reduce using rule 99 (unconditionalStatement)


state 51

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement
  103 conditionalStatement: tlabel . conditionalStatement
  107 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 28
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 29
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    conditionalStatement      go to state 127
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 128
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73


state 52

   98 unconditionalStatement: compoundStatement .

    $default  reduce using rule 98 (unconditionalStatement)


state 53

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 54

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 55

   68 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 129


state 56

   66 variable: simpleVariable .

    $default  reduce using rule 66 (variable)


state 57

  114 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  115                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 130


state 58

   67 variable: subscriptedVariable .

    $default  reduce using rule 67 (variable)


state 59

    7 label: identifier .
   29 arrayIdentifier: identifier .
   96 varIdentifier: identifier .
  119 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 119 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 96 (varIdentifier)
    $default                   reduce using rule 7 (label)


state 60

   65 simpleVariable: varIdentifier .

    $default  reduce using rule 65 (simpleVariable)


state 61

  128 statement: unconditionalStatement .

    $default  reduce using rule 128 (statement)


state 62

  129 statement: conditionalStatement .

    $default  reduce using rule 129 (statement)


state 63

  100 conditionalStatement: ifStatement .
  101                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 131

    $default  reduce using rule 100 (conditionalStatement)


state 64

  102 conditionalStatement: ifClause . forStatement
  104 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 132
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 133
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 134
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73


state 65

   97 unconditionalStatement: basicStatement .

    $default  reduce using rule 97 (unconditionalStatement)


state 66

  106 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 106 (basicStatement)


state 67

  109 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 109 (unlabelledBasicStatement)


state 68

  111 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 111 (unlabelledBasicStatement)


state 69

  108 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 108 (unlabelledBasicStatement)


state 70

  130 statement: forStatement .

    $default  reduce using rule 130 (statement)


state 71

  112 dummyStatement: empty .

    $default  reduce using rule 112 (dummyStatement)


state 72

  110 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 110 (unlabelledBasicStatement)


state 73

  118 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 135

    actualParameterPart  go to state 136


state 74

   15 compoundTail: statement . TOKEN_END
   16             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 137
    TOKEN_SEMICOLON  shift, and go to state 138


state 75

  153 procedureHeading: procedureIdentifier @3 . formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 139

    $default  reduce using rule 117 (empty)

    empty                go to state 140
    formalParameterPart  go to state 141


state 76

  154 procedureBody: statement .

    $default  reduce using rule 154 (procedureBody)


state 77

  155 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 155 (procedureDeclaration)


state 78

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 142
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    switchList                     go to state 143
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 144
    integer                        go to state 12
    identifier                     go to state 145
    ifClause                       go to state 116


state 79

   31 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 37
    arraySegment     go to state 146
    identifier       go to state 40


state 80

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 148
    boundPair                   go to state 149
    boundPairList               go to state 150
    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 151
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 81

   33 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 37
    arraySegment     go to state 153
    identifier       go to state 40


state 82

  156 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 46
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 76
    procedureBody             go to state 154


state 83

   33 arrayList: arrayList . TOKEN_COMMA arraySegment
   35 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 81

    $default  reduce using rule 35 (arrayDeclaration)


state 84

   91 listType: listType TOKEN_COMMA . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 43
    varIdentifier  go to state 155


state 85

   87 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 87 (logicalValue)


state 86

   48 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    term                 go to state 156
    factor               go to state 100
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 87

   49 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    term                 go to state 157
    factor               go to state 100
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 88

   43 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET
   60 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   86 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 88
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90
    TOKEN_IF             shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    arrayIdentifier                go to state 55
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 158
    arithmeticExpression           go to state 159
    simpleArithmeticExpression     go to state 98
    term                           go to state 99
    factor                         go to state 100
    primary                        go to state 101
    unsignedNumber                 go to state 102
    realNumber                     go to state 103
    integer                        go to state 104
    simpleVariable                 go to state 56
    variable                       go to state 105
    subscriptedVariable            go to state 58
    identifier                     go to state 106
    booleanExpression              go to state 160
    simpleBoolean                  go to state 108
    implication                    go to state 109
    booleanTerm                    go to state 110
    booleanFactor                  go to state 111
    booleanSecondary               go to state 112
    booleanPrimary                 go to state 113
    logicalValue                   go to state 114
    relation                       go to state 115
    varIdentifier                  go to state 60
    ifClause                       go to state 116
    procedureIdentifier            go to state 117
    functionDesignator             go to state 118


state 89

   63 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 63 (realNumber)


state 90

   83 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanPrimary              go to state 161
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 91

   41 simpleDesignationalExpression: tlabel .

    $default  reduce using rule 41 (simpleDesignationalExpression)


state 92

  131 statement: TOKEN_PRINT expression .

    $default  reduce using rule 131 (statement)


state 93

   40 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 162


state 94

   42 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 42 (simpleDesignationalExpression)


state 95

   44 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 44 (designationalExpression)


state 96

   38 expression: designationalExpression .

    $default  reduce using rule 38 (expression)


state 97

   36 expression: arithmeticExpression .

    $default  reduce using rule 36 (expression)


state 98

   46 arithmeticExpression: simpleArithmeticExpression .
   50 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   51                           | simpleArithmeticExpression . TOKEN_MINUS term
   88 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 163
    TOKEN_MINUS   shift, and go to state 164
    TOKEN_REL_OP  shift, and go to state 165

    $default  reduce using rule 46 (arithmeticExpression)

    relationalOperator  go to state 166


state 99

   47 simpleArithmeticExpression: term .
   53 term: term . TOKEN_MULTIPLY factor
   54     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 167
    TOKEN_MULTIPLY  shift, and go to state 168

    $default  reduce using rule 47 (simpleArithmeticExpression)


state 100

   52 term: factor .
   56 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 169

    $default  reduce using rule 52 (term)


state 101

   55 factor: primary .

    $default  reduce using rule 55 (factor)


state 102

   57 primary: unsignedNumber .

    $default  reduce using rule 57 (primary)


state 103

   61 unsignedNumber: realNumber .

    $default  reduce using rule 61 (unsignedNumber)


state 104

    8 label: integer .
   62 unsignedNumber: integer .

    TOKEN_COLON  reduce using rule 8 (label)
    $default     reduce using rule 62 (unsignedNumber)


state 105

   59 primary: variable .

    $default  reduce using rule 59 (primary)


state 106

    7 label: identifier .
   29 arrayIdentifier: identifier .
   39 switchIdentifier: identifier .
   96 varIdentifier: identifier .
  119 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 119 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 39 (switchIdentifier)
    TOKEN_COLON                reduce using rule 7 (label)
    $default                   reduce using rule 96 (varIdentifier)


state 107

   37 expression: booleanExpression .

    $default  reduce using rule 37 (expression)


state 108

   73 booleanExpression: simpleBoolean .
   75 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 170

    $default  reduce using rule 73 (booleanExpression)


state 109

   74 simpleBoolean: implication .
   77 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 171

    $default  reduce using rule 74 (simpleBoolean)


state 110

   76 implication: booleanTerm .
   79 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 172

    $default  reduce using rule 76 (implication)


state 111

   78 booleanTerm: booleanFactor .
   81 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 173

    $default  reduce using rule 78 (booleanTerm)


state 112

   80 booleanFactor: booleanSecondary .

    $default  reduce using rule 80 (booleanFactor)


state 113

   82 booleanSecondary: booleanPrimary .

    $default  reduce using rule 82 (booleanSecondary)


state 114

   84 booleanPrimary: logicalValue .

    $default  reduce using rule 84 (booleanPrimary)


state 115

   85 booleanPrimary: relation .

    $default  reduce using rule 85 (booleanPrimary)


state 116

   45 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 142
    TOKEN_INTEGER       shift, and go to state 3

    tlabel                         go to state 91
    label                          go to state 8
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 174
    integer                        go to state 12
    identifier                     go to state 145


state 117

  127 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 135

    actualParameterPart  go to state 175


state 118

   58 primary: functionDesignator .

    $default  reduce using rule 58 (primary)


state 119

  116 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 176


state 120

   29 arrayIdentifier: identifier .
   96 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 96 (varIdentifier)
    $default      reduce using rule 29 (arrayIdentifier)


state 121

   60 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   86 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 159
    simpleArithmeticExpression  go to state 98
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanExpression           go to state 160
    simpleBoolean               go to state 108
    implication                 go to state 109
    booleanTerm                 go to state 110
    booleanFactor               go to state 111
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 122

   50 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   51                           | simpleArithmeticExpression . TOKEN_MINUS term
   88 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 163
    TOKEN_MINUS   shift, and go to state 164
    TOKEN_REL_OP  shift, and go to state 165

    relationalOperator  go to state 166


state 123

   62 unsignedNumber: integer .

    $default  reduce using rule 62 (unsignedNumber)


state 124

   29 arrayIdentifier: identifier .
   96 varIdentifier: identifier .
  119 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 119 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    $default                   reduce using rule 96 (varIdentifier)


state 125

  105 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 177


state 126

  113 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 113 (returnStatement)


state 127

  103 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 103 (conditionalStatement)


state 128

  107 basicStatement: tlabel basicStatement .

    $default  reduce using rule 107 (basicStatement)


state 129

   68 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 178
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    subscriptList               go to state 179
    subscriptExpression         go to state 180
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 130

  114 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  115                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 181
    simpleArithmeticExpression  go to state 98
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanExpression           go to state 182
    simpleBoolean               go to state 108
    implication                 go to state 109
    booleanTerm                 go to state 110
    booleanFactor               go to state 111
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 131

  101 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 46
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 183


state 132

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement
  107 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 28
    tlabel                    go to state 132
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 29
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    basicStatement            go to state 128
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73


state 133

  104 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 104 (ifStatement)


state 134

  102 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 102 (conditionalStatement)


state 135

  120 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  121                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 88
    TOKEN_CLOSE_BRACKET  shift, and go to state 184
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90
    TOKEN_IF             shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    arrayIdentifier                go to state 55
    expression                     go to state 185
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 96
    arithmeticExpression           go to state 97
    simpleArithmeticExpression     go to state 98
    term                           go to state 99
    factor                         go to state 100
    primary                        go to state 101
    unsignedNumber                 go to state 102
    realNumber                     go to state 103
    integer                        go to state 104
    simpleVariable                 go to state 56
    variable                       go to state 105
    subscriptedVariable            go to state 58
    identifier                     go to state 106
    booleanExpression              go to state 107
    simpleBoolean                  go to state 108
    implication                    go to state 109
    booleanTerm                    go to state 110
    booleanFactor                  go to state 111
    booleanSecondary               go to state 112
    booleanPrimary                 go to state 113
    logicalValue                   go to state 114
    relation                       go to state 115
    varIdentifier                  go to state 60
    ifClause                       go to state 116
    procedureIdentifier            go to state 117
    actualParameterList            go to state 186
    actualParameter                go to state 187
    functionDesignator             go to state 118


state 136

  118 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 118 (procedureStatement)


state 137

   15 compoundTail: statement TOKEN_END .

    $default  reduce using rule 15 (compoundTail)


state 138

   16 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 46
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    compoundTail              go to state 188
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 74


state 139

  137 formalParameterPart: TOKEN_OPEN_BRACKET . $@2 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 136 ($@2)

    $@2  go to state 189


state 140

  135 formalParameterPart: empty .

    $default  reduce using rule 135 (formalParameterPart)


state 141

  153 procedureHeading: procedureIdentifier @3 formalParameterPart . TOKEN_SEMICOLON $@4 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 190


state 142

   43 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 142
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 158
    integer                        go to state 12
    identifier                     go to state 145
    ifClause                       go to state 116


state 143

   23 switchList: switchList . TOKEN_COMMA designationalExpression
   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .

    TOKEN_COMMA  shift, and go to state 191

    $default  reduce using rule 24 (switchDeclaration)


state 144

   22 switchList: designationalExpression .

    $default  reduce using rule 22 (switchList)


state 145

    7 label: identifier .
   39 switchIdentifier: identifier .

    TOKEN_OPEN_CURLY_BRACKET  reduce using rule 39 (switchIdentifier)
    $default                  reduce using rule 7 (label)


state 146

   31 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 31 (arraySegment)


state 147

   60 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 159
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 148

   26 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 192


state 149

   27 boundPairList: boundPair .

    $default  reduce using rule 27 (boundPairList)


state 150

   28 boundPairList: boundPairList . TOKEN_COMMA boundPair
   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 193
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 194


state 151

   21 lowerBound: arithmeticExpression .

    $default  reduce using rule 21 (lowerBound)


state 152

   46 arithmeticExpression: simpleArithmeticExpression .
   50 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   51                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 163
    TOKEN_MINUS  shift, and go to state 164

    $default  reduce using rule 46 (arithmeticExpression)


state 153

   33 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 33 (arrayList)


state 154

  156 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 156 (procedureDeclaration)


state 155

   91 listType: listType TOKEN_COMMA varIdentifier .

    $default  reduce using rule 91 (listType)


state 156

   48 simpleArithmeticExpression: TOKEN_PLUS term .
   53 term: term . TOKEN_MULTIPLY factor
   54     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 167
    TOKEN_MULTIPLY  shift, and go to state 168

    $default  reduce using rule 48 (simpleArithmeticExpression)


state 157

   49 simpleArithmeticExpression: TOKEN_MINUS term .
   53 term: term . TOKEN_MULTIPLY factor
   54     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 167
    TOKEN_MULTIPLY  shift, and go to state 168

    $default  reduce using rule 49 (simpleArithmeticExpression)


state 158

   43 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 195


state 159

   60 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 196


state 160

   86 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 197


state 161

   83 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 83 (booleanSecondary)


state 162

   40 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 178
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    subscriptExpression         go to state 198
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 163

   50 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    term                 go to state 199
    factor               go to state 100
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 164

   51 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    term                 go to state 200
    factor               go to state 100
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 165

   89 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 89 (relationalOperator)


state 166

   88 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 201
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 167

   54 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    factor               go to state 202
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 168

   53 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    factor               go to state 203
    primary              go to state 101
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 169

   56 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 55
    primary              go to state 204
    unsignedNumber       go to state 102
    realNumber           go to state 103
    integer              go to state 123
    simpleVariable       go to state 56
    variable             go to state 105
    subscriptedVariable  go to state 58
    identifier           go to state 124
    varIdentifier        go to state 60
    procedureIdentifier  go to state 117
    functionDesignator   go to state 118


state 170

   75 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    implication                 go to state 205
    booleanTerm                 go to state 110
    booleanFactor               go to state 111
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 171

   77 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanTerm                 go to state 206
    booleanFactor               go to state 111
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 172

   79 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanFactor               go to state 207
    booleanSecondary            go to state 112
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 173

   81 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 121
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90

    arrayIdentifier             go to state 55
    simpleArithmeticExpression  go to state 122
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    booleanSecondary            go to state 208
    booleanPrimary              go to state 113
    logicalValue                go to state 114
    relation                    go to state 115
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 174

   45 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 209


state 175

  127 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 127 (functionDesignator)


state 176

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 210
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 177

  105 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 105 (ifClause)


state 178

   71 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 71 (subscriptExpression)


state 179

   68 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   70 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 211
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 212


state 180

   69 subscriptList: subscriptExpression .

    $default  reduce using rule 69 (subscriptList)


state 181

  114 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 114 (assignmentStatement)


state 182

  115 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 115 (assignmentStatement)


state 183

  101 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 101 (conditionalStatement)


state 184

  120 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 120 (actualParameterPart)


state 185

  124 actualParameter: expression .

    $default  reduce using rule 124 (actualParameter)


state 186

  121 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  123 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 213
    TOKEN_CLOSE_BRACKET  shift, and go to state 214

    parameterDelimiter  go to state 215


state 187

  122 actualParameterList: actualParameter .

    $default  reduce using rule 122 (actualParameterList)


state 188

   16 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 16 (compoundTail)


state 189

  137 formalParameterPart: TOKEN_OPEN_BRACKET $@2 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 216
    formalParameter      go to state 217
    formalParameterList  go to state 218


state 190

  153 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON . $@4 valuePart specificationPart

    $default  reduce using rule 152 ($@4)

    $@4  go to state 219


state 191

   23 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 142
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 220
    integer                        go to state 12
    identifier                     go to state 145
    ifClause                       go to state 116


state 192

   26 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    upperBound                  go to state 221
    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 222
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 193

   28 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 148
    boundPair                   go to state 223
    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 151
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 194

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 30 (arraySegment)


state 195

   43 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 43 (simpleDesignationalExpression)


state 196

   60 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 60 (primary)


state 197

   86 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 86 (booleanPrimary)


state 198

   40 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 224


state 199

   50 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   53 term: term . TOKEN_MULTIPLY factor
   54     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 167
    TOKEN_MULTIPLY  shift, and go to state 168

    $default  reduce using rule 50 (simpleArithmeticExpression)


state 200

   51 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   53 term: term . TOKEN_MULTIPLY factor
   54     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 167
    TOKEN_MULTIPLY  shift, and go to state 168

    $default  reduce using rule 51 (simpleArithmeticExpression)


state 201

   50 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   51                           | simpleArithmeticExpression . TOKEN_MINUS term
   88 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 163
    TOKEN_MINUS  shift, and go to state 164

    $default  reduce using rule 88 (relation)


state 202

   54 term: term TOKEN_DIVIDE factor .
   56 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 169

    $default  reduce using rule 54 (term)


state 203

   53 term: term TOKEN_MULTIPLY factor .
   56 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 169

    $default  reduce using rule 53 (term)


state 204

   56 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 56 (factor)


state 205

   75 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   77 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 171

    $default  reduce using rule 75 (simpleBoolean)


state 206

   77 implication: implication TOKEN_IMPLY booleanTerm .
   79 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 172

    $default  reduce using rule 77 (implication)


state 207

   79 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   81 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 173

    $default  reduce using rule 79 (booleanTerm)


state 208

   81 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 81 (booleanFactor)


state 209

   45 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 142
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 225
    integer                        go to state 12
    identifier                     go to state 145
    ifClause                       go to state 116


state 210

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 226


state 211

   70 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 178
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    subscriptExpression         go to state 227
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 212

   68 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 68 (subscriptedVariable)


state 213

  125 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 125 (parameterDelimiter)


state 214

  121 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  126 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 121 (actualParameterPart)

    identifier  go to state 228


state 215

  123 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 85
    TOKEN_PLUS           shift, and go to state 86
    TOKEN_MINUS          shift, and go to state 87
    TOKEN_OPEN_BRACKET   shift, and go to state 88
    TOKEN_REAL_NUM       shift, and go to state 89
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 90
    TOKEN_IF             shift, and go to state 48

    tlabel                         go to state 91
    label                          go to state 8
    arrayIdentifier                go to state 55
    expression                     go to state 185
    switchIdentifier               go to state 93
    switchDesignator               go to state 94
    simpleDesignationalExpression  go to state 95
    designationalExpression        go to state 96
    arithmeticExpression           go to state 97
    simpleArithmeticExpression     go to state 98
    term                           go to state 99
    factor                         go to state 100
    primary                        go to state 101
    unsignedNumber                 go to state 102
    realNumber                     go to state 103
    integer                        go to state 104
    simpleVariable                 go to state 56
    variable                       go to state 105
    subscriptedVariable            go to state 58
    identifier                     go to state 106
    booleanExpression              go to state 107
    simpleBoolean                  go to state 108
    implication                    go to state 109
    booleanTerm                    go to state 110
    booleanFactor                  go to state 111
    booleanSecondary               go to state 112
    booleanPrimary                 go to state 113
    logicalValue                   go to state 114
    relation                       go to state 115
    varIdentifier                  go to state 60
    ifClause                       go to state 116
    procedureIdentifier            go to state 117
    actualParameter                go to state 229
    functionDesignator             go to state 118


state 216

  132 formalParameter: identifier .

    $default  reduce using rule 132 (formalParameter)


state 217

  133 formalParameterList: formalParameter .

    $default  reduce using rule 133 (formalParameterList)


state 218

  134 formalParameterList: formalParameterList . parameterDelimiter formalParameter
  137 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 213
    TOKEN_CLOSE_BRACKET  shift, and go to state 230

    parameterDelimiter  go to state 231


state 219

  153 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 232

    $default  reduce using rule 117 (empty)

    empty      go to state 233
    valuePart  go to state 234


state 220

   23 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 23 (switchList)


state 221

   26 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 26 (boundPair)


state 222

   25 upperBound: arithmeticExpression .

    $default  reduce using rule 25 (upperBound)


state 223

   28 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 28 (boundPairList)


state 224

   40 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 40 (switchDesignator)


state 225

   45 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 45 (designationalExpression)


state 226

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 235
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 227

   70 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 70 (subscriptList)


state 228

  126 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 236


state 229

  123 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 123 (actualParameterList)


state 230

  126 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  137 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 137 (formalParameterPart)

    identifier  go to state 228


state 231

  134 formalParameterList: formalParameterList parameterDelimiter . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 216
    formalParameter  go to state 237


state 232

  140 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 238
    identifierList  go to state 239


state 233

  141 valuePart: empty .

    $default  reduce using rule 141 (valuePart)


state 234

  153 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 240
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_TYPE_LABEL    shift, and go to state 241

    $default  reduce using rule 117 (empty)

    type                         go to state 242
    empty                        go to state 243
    specifier                    go to state 244
    specificationPart            go to state 245
    specificationIdentifierList  go to state 246


state 235

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 247


state 236

  126 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 248


state 237

  134 formalParameterList: formalParameterList parameterDelimiter formalParameter .

    $default  reduce using rule 134 (formalParameterList)


state 238

  138 identifierList: identifier .

    $default  reduce using rule 138 (identifierList)


state 239

  139 identifierList: identifierList . TOKEN_COMMA identifier
  140 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 249
    TOKEN_SEMICOLON  shift, and go to state 250


state 240

  145 specifier: TOKEN_SWITCH .

    $default  reduce using rule 145 (specifier)


state 241

  144 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 144 (specifier)


state 242

  142 specifier: type .
  143          | type . TOKEN_ARRAY
  146          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 251
    TOKEN_ARRAY      shift, and go to state 252

    $default  reduce using rule 142 (specifier)


state 243

  147 specificationPart: empty .

    $default  reduce using rule 147 (specificationPart)


state 244

  149 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 238
    identifierList  go to state 253


state 245

  153 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart .

    $default  reduce using rule 153 (procedureHeading)


state 246

  148 specificationPart: specificationIdentifierList .
  150 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 240
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_TYPE_LABEL    shift, and go to state 241

    $default  reduce using rule 148 (specificationPart)

    type       go to state 242
    specifier  go to state 254


state 247

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 86
    TOKEN_MINUS         shift, and go to state 87
    TOKEN_OPEN_BRACKET  shift, and go to state 147
    TOKEN_REAL_NUM      shift, and go to state 89
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 55
    arithmeticExpression        go to state 255
    simpleArithmeticExpression  go to state 152
    term                        go to state 99
    factor                      go to state 100
    primary                     go to state 101
    unsignedNumber              go to state 102
    realNumber                  go to state 103
    integer                     go to state 123
    simpleVariable              go to state 56
    variable                    go to state 105
    subscriptedVariable         go to state 58
    identifier                  go to state 124
    varIdentifier               go to state 60
    procedureIdentifier         go to state 117
    functionDesignator          go to state 118


state 248

  126 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 126 (parameterDelimiter)


state 249

  139 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 256


state 250

  140 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 140 (valuePart)


state 251

  146 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 146 (specifier)


state 252

  143 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 143 (specifier)


state 253

  139 identifierList: identifierList . TOKEN_COMMA identifier
  149 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 249
    TOKEN_SEMICOLON  shift, and go to state 257


state 254

  150 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 238
    identifierList  go to state 258


state 255

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 259


state 256

  139 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 139 (identifierList)


state 257

  149 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 149 (specificationIdentifierList)


state 258

  139 identifierList: identifierList . TOKEN_COMMA identifier
  150 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 249
    TOKEN_SEMICOLON  shift, and go to state 260


state 259

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 46
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 47
    TOKEN_IF          shift, and go to state 48
    TOKEN_RETURN      shift, and go to state 49

    $default  reduce using rule 117 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 50
    tlabel                    go to state 51
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 52
    arrayIdentifier           go to state 55
    integer                   go to state 12
    simpleVariable            go to state 56
    variable                  go to state 57
    subscriptedVariable       go to state 58
    identifier                go to state 59
    varIdentifier             go to state 60
    unconditionalStatement    go to state 61
    conditionalStatement      go to state 62
    ifStatement               go to state 63
    ifClause                  go to state 64
    basicStatement            go to state 65
    unlabelledBasicStatement  go to state 66
    dummyStatement            go to state 67
    returnStatement           go to state 68
    assignmentStatement       go to state 69
    forStatement              go to state 70
    empty                     go to state 71
    procedureStatement        go to state 72
    procedureIdentifier       go to state 73
    statement                 go to state 261


state 260

  150 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 150 (specificationIdentifierList)


state 261

  116 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 116 (forStatement)
