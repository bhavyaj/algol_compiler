Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL
   TOKEN_RELOP


Grammar

    0 $accept: program $end

    1 blockHead: TOKEN_BEGIN declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 unlabelledCompound: TOKEN_BEGIN compoundTail

   12 compoundStatement: unlabelledCompound
   13                  | tlabel compoundStatement

   14 compoundTail: statement TOKEN_END
   15             | statement TOKEN_SEMICOLON compoundTail

   16 declaration: typeDeclaration
   17            | arrayDeclaration
   18            | procedureDeclaration

   19 lowerBound: arithmeticExpression

   20 upperBound: arithmeticExpression

   21 boundPair: lowerBound TOKEN_COLON upperBound

   22 boundPairList: boundPair
   23              | boundPairList TOKEN_COMMA boundPair

   24 arrayIdentifier: identifier

   25 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   26             | arrayIdentifier TOKEN_COMMA arraySegment

   27 arrayList: arraySegment

   28 @1: /* empty */

   29 arrayList: arrayList TOKEN_COMMA @1 arraySegment

   30 arrayDeclaration: TOKEN_ARRAY arrayList
   31                 | type TOKEN_ARRAY arrayList

   32 expression: arithmeticExpression
   33           | booleanExpression

   34 arithmeticExpression: simpleArithmeticExpression
   35                     | ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

   36 simpleArithmeticExpression: term
   37                           | TOKEN_PLUS term
   38                           | TOKEN_MINUS term
   39                           | simpleArithmeticExpression TOKEN_PLUS term
   40                           | simpleArithmeticExpression TOKEN_MINUS term

   41 term: factor
   42     | term TOKEN_MULTIPLY factor
   43     | term TOKEN_DIVIDE factor

   44 factor: primary
   45       | factor TOKEN_POWER primary

   46 primary: realNumber
   47        | integer
   48        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   49 realNumber: TOKEN_REAL_NUM

   50 integer: TOKEN_INTEGER

   51 variable: identifier
   52         | subscriptedVariable

   53 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   54 subscriptList: subscriptExpression
   55              | subscriptList TOKEN_COMMA subscriptExpression

   56 subscriptExpression: arithmeticExpression

   57 identifier: TOKEN_IDENTIFIER

   58 booleanExpression: simpleBoolean

   59 simpleBoolean: implication
   60              | simpleBoolean TOKEN_EQUIV implication

   61 implication: booleanTerm
   62            | implication TOKEN_IMPLY booleanTerm

   63 booleanTerm: booleanFactor
   64            | booleanTerm TOKEN_OR_OP booleanFactor

   65 booleanFactor: booleanSecondary
   66              | booleanFactor TOKEN_AND_OP booleanSecondary

   67 booleanSecondary: booleanPrimary
   68                 | TOKEN_NOT_OP booleanPrimary

   69 booleanPrimary: logicalValue
   70               | relation
   71               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   72 logicalValue: TOKEN_LOGICAL_VALUE

   73 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   74 relationalOperator: TOKEN_REL_OP

   75 listType: varIdentifier

   76 @2: /* empty */

   77 listType: listType TOKEN_COMMA @2 varIdentifier

   78 type: TOKEN_TYPE_REAL
   79     | TOKEN_TYPE_INTEGER
   80     | TOKEN_TYPE_BOOLEAN

   81 typeDeclaration: type listType

   82 varIdentifier: identifier

   83 unconditionalStatement: basicStatement
   84                       | compoundStatement
   85                       | block

   86 conditionalStatement: ifStatement
   87                     | ifClause unconditionalStatement TOKEN_ELSE statement
   88                     | ifClause forStatement
   89                     | tlabel conditionalStatement

   90 ifStatement: ifClause unconditionalStatement

   91 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   92 basicStatement: unlabelledBasicStatement
   93               | label basicStatement

   94 unlabelledBasicStatement: assignmentStatement
   95                         | dummyStatement

   96 @3: /* empty */

   97 unlabelledBasicStatement: procedureStatement @3 returnStatement

   98 dummyStatement: empty

   99 returnStatement: TOKEN_RETURN expression

  100 assignmentStatement: identifier TOKEN_ASSIGN arithmeticExpression
  101                    | identifier TOKEN_ASSIGN booleanExpression

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  103 empty: /* empty */

  104 procedureStatement: procedureIdentifier actualParameterPart

  105 procedureIdentifier: identifier

  106 actualParameterPart: empty
  107                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  108 actualParameterList: actualParameter
  109                    | actualParameterList parameterDelimiter actualParameter

  110 actualParameter: expression

  111 parameterDelimiter: TOKEN_COMMA
  112                   | TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

  113 statement: unconditionalStatement
  114          | conditionalStatement
  115          | forStatement
  116          | TOKEN_PRINT expression

  117 formalParameter: identifier

  118 formalParameterList: formalParameter

  119 $@4: /* empty */

  120 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter

  121 formalParameterPart: empty

  122 $@5: /* empty */

  123 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET

  124 identifierList: identifier
  125               | identifierList TOKEN_COMMA identifier

  126 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  127          | empty

  128 specifier: type
  129          | type TOKEN_ARRAY
  130          | TOKEN_TYPE_LABEL
  131          | TOKEN_SWITCH
  132          | type TOKEN_PROCEDURE

  133 specificationPart: empty
  134                  | specificationIdentifierList

  135 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  136                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  137 @6: /* empty */

  138 $@7: /* empty */

  139 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

  140 procedureBody: statement

  141 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  142                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 116
TOKEN_IDENTIFIER (259) 57
TOKEN_BEGIN (260) 1 11
TOKEN_END (261) 14
TOKEN_LOGICAL_VALUE (262) 72
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 132 141 142
TOKEN_PLUS (266) 37 39
TOKEN_MINUS (267) 38 40
TOKEN_DIVIDE (268) 43
TOKEN_POWER (269) 45
TOKEN_MULTIPLY (270) 42
TOKEN_COMMA (271) 23 26 29 55 77 111 125
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 48 71 107 123
TOKEN_CLOSE_BRACKET (277) 48 71 107 123
TOKEN_OPEN_SQUARE_BRACKET (278) 25 53 112
TOKEN_CLOSE_SQUARE_BRACKET (279) 25 53 112
TOKEN_CONTINUE (280)
TOKEN_REAL_NUM (281) 49
TOKEN_INTEGER (282) 50
TOKEN_COLON (283) 6 21 112
TOKEN_REL_OP (284) 74
TOKEN_LESS_EQUAL (285)
TOKEN_GREATER (286)
TOKEN_GREATER_EQUAL (287)
TOKEN_EQUAL (288)
TOKEN_LESS (289)
TOKEN_NOTEQUAL (290)
TOKEN_EQUIV (291) 60
TOKEN_AND_OP (292) 66
TOKEN_OR_OP (293) 64
TOKEN_NOT_OP (294) 68
TOKEN_GOTO (295)
TOKEN_FOR (296) 102
TOKEN_DO (297) 102
TOKEN_WHILE (298)
TOKEN_STEP (299) 102
TOKEN_UNTIL (300) 102
TOKEN_IF (301) 91
TOKEN_THEN (302) 91
TOKEN_ELSE (303) 35 87
TOKEN_SWITCH (304) 131
TOKEN_VALUE (305) 126
TOKEN_BOOLEAN (306)
TOKEN_TYPE_OWN (307)
TOKEN_TYPE_INTEGER (308) 79
TOKEN_TYPE_REAL (309) 78
TOKEN_TYPE_BOOLEAN (310) 80
TOKEN_TYPE_ARRAY (311)
TOKEN_TYPE_SWITCH (312)
TOKEN_TYPE_PROCEDURE (313)
TOKEN_TYPE_STRING (314)
TOKEN_TYPE_LABEL (315) 130
TOKEN_TYPE_VALUE (316)
TOKEN_ARRAY (317) 30 31 129
TOKEN_IMPLY (318) 62
TOKEN_SEMICOLON (319) 2 3 15 126 135 136 139
TOKEN_LTRSTRING (320)
TOKEN_RETURN (321) 99
TOKEN_ASSIGN_IDENTIFIER (322)
TOKEN_LABEL_IDENTIFIER (323)
TOKEN_BOOL_IDENTIFIER (324)
TOKEN_ASSIGN (325) 100 101 102
TOKEN_NOT_EQUAL (326)
TOKEN_RELOP (327)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
blockHead (74)
    on left: 1 2, on right: 2 3
unlabelledBlock (75)
    on left: 3, on right: 4
block (76)
    on left: 4 5, on right: 5 10 85
tlabel (77)
    on left: 6, on right: 5 13 89
label (78)
    on left: 7 8, on right: 6 93
program (79)
    on left: 9 10, on right: 0
unlabelledCompound (80)
    on left: 11, on right: 12
compoundStatement (81)
    on left: 12 13, on right: 9 13 84
compoundTail (82)
    on left: 14 15, on right: 3 11 15
declaration (83)
    on left: 16 17 18, on right: 1 2
lowerBound (84)
    on left: 19, on right: 21
upperBound (85)
    on left: 20, on right: 21
boundPair (86)
    on left: 21, on right: 22 23
boundPairList (87)
    on left: 22 23, on right: 23 25
arrayIdentifier (88)
    on left: 24, on right: 25 26 53
arraySegment (89)
    on left: 25 26, on right: 26 27 29
arrayList (90)
    on left: 27 29, on right: 29 30 31
@1 (91)
    on left: 28, on right: 29
arrayDeclaration (92)
    on left: 30 31, on right: 17
expression (93)
    on left: 32 33, on right: 99 110 116
arithmeticExpression (94)
    on left: 34 35, on right: 19 20 32 35 48 56 100 102
simpleArithmeticExpression (95)
    on left: 36 37 38 39 40, on right: 34 35 39 40 73
term (96)
    on left: 41 42 43, on right: 36 37 38 39 40 42 43
factor (97)
    on left: 44 45, on right: 41 42 43 45
primary (98)
    on left: 46 47 48, on right: 44 45
realNumber (99)
    on left: 49, on right: 46
integer (100)
    on left: 50, on right: 8 47
variable (101)
    on left: 51 52, on right: 102
subscriptedVariable (102)
    on left: 53, on right: 52
subscriptList (103)
    on left: 54 55, on right: 53 55
subscriptExpression (104)
    on left: 56, on right: 54 55
identifier (105)
    on left: 57, on right: 7 24 51 82 100 101 105 112 117 124 125
booleanExpression (106)
    on left: 58, on right: 33 71 91 101
simpleBoolean (107)
    on left: 59 60, on right: 58 60
implication (108)
    on left: 61 62, on right: 59 60 62
booleanTerm (109)
    on left: 63 64, on right: 61 62 64
booleanFactor (110)
    on left: 65 66, on right: 63 64 66
booleanSecondary (111)
    on left: 67 68, on right: 65 66
booleanPrimary (112)
    on left: 69 70 71, on right: 67 68
logicalValue (113)
    on left: 72, on right: 69
relation (114)
    on left: 73, on right: 70
relationalOperator (115)
    on left: 74, on right: 73
listType (116)
    on left: 75 77, on right: 77 81
@2 (117)
    on left: 76, on right: 77
type (118)
    on left: 78 79 80, on right: 31 81 128 129 132 142
typeDeclaration (119)
    on left: 81, on right: 16
varIdentifier (120)
    on left: 82, on right: 75 77
unconditionalStatement (121)
    on left: 83 84 85, on right: 87 90 113
conditionalStatement (122)
    on left: 86 87 88 89, on right: 89 114
ifStatement (123)
    on left: 90, on right: 86
ifClause (124)
    on left: 91, on right: 35 87 88 90
basicStatement (125)
    on left: 92 93, on right: 83 93
unlabelledBasicStatement (126)
    on left: 94 95 97, on right: 92
@3 (127)
    on left: 96, on right: 97
dummyStatement (128)
    on left: 98, on right: 95
returnStatement (129)
    on left: 99, on right: 97
assignmentStatement (130)
    on left: 100 101, on right: 94
forStatement (131)
    on left: 102, on right: 88 115
empty (132)
    on left: 103, on right: 98 106 121 127 133
procedureStatement (133)
    on left: 104, on right: 97
procedureIdentifier (134)
    on left: 105, on right: 104 139
actualParameterPart (135)
    on left: 106 107, on right: 104
actualParameterList (136)
    on left: 108 109, on right: 107 109
actualParameter (137)
    on left: 110, on right: 108 109
parameterDelimiter (138)
    on left: 111 112, on right: 109 120
statement (139)
    on left: 113 114 115 116, on right: 14 15 87 102 140
formalParameter (140)
    on left: 117, on right: 118 120
formalParameterList (141)
    on left: 118 120, on right: 120 123
$@4 (142)
    on left: 119, on right: 120
formalParameterPart (143)
    on left: 121 123, on right: 139
$@5 (144)
    on left: 122, on right: 123
identifierList (145)
    on left: 124 125, on right: 125 126 135 136
valuePart (146)
    on left: 126 127, on right: 139
specifier (147)
    on left: 128 129 130 131 132, on right: 135 136
specificationPart (148)
    on left: 133 134, on right: 139
specificationIdentifierList (149)
    on left: 135 136, on right: 134 136
procedureHeading (150)
    on left: 139, on right: 141 142
@6 (151)
    on left: 137, on right: 139
$@7 (152)
    on left: 138, on right: 139
procedureBody (153)
    on left: 140, on right: 141 142
procedureDeclaration (154)
    on left: 141 142, on right: 18


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   57 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 57 (identifier)


state 2

    1 blockHead: TOKEN_BEGIN . declaration
   11 unlabelledCompound: TOKEN_BEGIN . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 16
    TOKEN_IF            shift, and go to state 17
    TOKEN_TYPE_INTEGER  shift, and go to state 18
    TOKEN_TYPE_REAL     shift, and go to state 19
    TOKEN_TYPE_BOOLEAN  shift, and go to state 20
    TOKEN_ARRAY         shift, and go to state 21

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    compoundTail              go to state 26
    declaration               go to state 27
    arrayDeclaration          go to state 28
    integer                   go to state 12
    identifier                go to state 29
    type                      go to state 30
    typeDeclaration           go to state 31
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 44
    procedureDeclaration      go to state 45


state 3

   50 integer: TOKEN_INTEGER .

    $default  reduce using rule 50 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 46


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 47
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 48
    integer             go to state 12
    identifier          go to state 13


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 49


state 9

    0 $accept: program . $end

    $end  shift, and go to state 50


state 10

   12 compoundStatement: unlabelledCompound .

    $default  reduce using rule 12 (compoundStatement)


state 11

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 12

    8 label: integer .

    $default  reduce using rule 8 (label)


state 13

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 14

  116 statement: TOKEN_PRINT . expression

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 57
    arithmeticExpression        go to state 58
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 65
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74


state 15

  141 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 75
    procedureIdentifier  go to state 76
    procedureHeading     go to state 77


state 16

  102 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 78
    variable             go to state 79
    subscriptedVariable  go to state 80
    identifier           go to state 81


state 17

   91 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 83
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73


state 18

   79 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 79 (type)


state 19

   78 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 78 (type)


state 20

   80 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 80 (type)


state 21

   30 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 84
    arraySegment     go to state 85
    arrayList        go to state 86
    identifier       go to state 87


state 22

   85 unconditionalStatement: block .

    $default  reduce using rule 85 (unconditionalStatement)


state 23

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement
   89 conditionalStatement: tlabel . conditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 17

    blockHead             go to state 4
    unlabelledBlock       go to state 5
    block                 go to state 47
    tlabel                go to state 23
    label                 go to state 8
    unlabelledCompound    go to state 10
    compoundStatement     go to state 48
    integer               go to state 12
    identifier            go to state 13
    conditionalStatement  go to state 88
    ifStatement           go to state 34
    ifClause              go to state 35


state 24

    6 tlabel: label . TOKEN_COLON
   93 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_COLON       shift, and go to state 49

    $default  reduce using rule 103 (empty)

    label                     go to state 89
    integer                   go to state 12
    identifier                go to state 29
    basicStatement            go to state 90
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43


state 25

   84 unconditionalStatement: compoundStatement .

    $default  reduce using rule 84 (unconditionalStatement)


state 26

   11 unlabelledCompound: TOKEN_BEGIN compoundTail .

    $default  reduce using rule 11 (unlabelledCompound)


state 27

    1 blockHead: TOKEN_BEGIN declaration .

    $default  reduce using rule 1 (blockHead)


state 28

   17 declaration: arrayDeclaration .

    $default  reduce using rule 17 (declaration)


state 29

    7 label: identifier .
  100 assignmentStatement: identifier . TOKEN_ASSIGN arithmeticExpression
  101                    | identifier . TOKEN_ASSIGN booleanExpression
  105 procedureIdentifier: identifier .

    TOKEN_ASSIGN  shift, and go to state 91

    TOKEN_OPEN_BRACKET  reduce using rule 105 (procedureIdentifier)
    TOKEN_RETURN        reduce using rule 105 (procedureIdentifier)
    $default            reduce using rule 7 (label)


state 30

   31 arrayDeclaration: type . TOKEN_ARRAY arrayList
   81 typeDeclaration: type . listType
  142 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 92
    TOKEN_ARRAY       shift, and go to state 93

    identifier     go to state 94
    listType       go to state 95
    varIdentifier  go to state 96


state 31

   16 declaration: typeDeclaration .

    $default  reduce using rule 16 (declaration)


state 32

  113 statement: unconditionalStatement .

    $default  reduce using rule 113 (statement)


state 33

  114 statement: conditionalStatement .

    $default  reduce using rule 114 (statement)


state 34

   86 conditionalStatement: ifStatement .

    $default  reduce using rule 86 (conditionalStatement)


state 35

   87 conditionalStatement: ifClause . unconditionalStatement TOKEN_ELSE statement
   88                     | ifClause . forStatement
   90 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 7
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 97
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 98
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43


state 36

   83 unconditionalStatement: basicStatement .

    $default  reduce using rule 83 (unconditionalStatement)


state 37

   92 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 92 (basicStatement)


state 38

   95 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 95 (unlabelledBasicStatement)


state 39

   94 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 94 (unlabelledBasicStatement)


state 40

  115 statement: forStatement .

    $default  reduce using rule 115 (statement)


state 41

   98 dummyStatement: empty .

    $default  reduce using rule 98 (dummyStatement)


state 42

   97 unlabelledBasicStatement: procedureStatement . @3 returnStatement

    $default  reduce using rule 96 (@3)

    @3  go to state 99


state 43

  104 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 100

    $default  reduce using rule 103 (empty)

    empty                go to state 101
    actualParameterPart  go to state 102


state 44

   14 compoundTail: statement . TOKEN_END
   15             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 103
    TOKEN_SEMICOLON  shift, and go to state 104


state 45

   18 declaration: procedureDeclaration .

    $default  reduce using rule 18 (declaration)


state 46

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 16
    TOKEN_IF            shift, and go to state 17
    TOKEN_TYPE_INTEGER  shift, and go to state 18
    TOKEN_TYPE_REAL     shift, and go to state 19
    TOKEN_TYPE_BOOLEAN  shift, and go to state 20
    TOKEN_ARRAY         shift, and go to state 21

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    compoundTail              go to state 105
    declaration               go to state 106
    arrayDeclaration          go to state 28
    integer                   go to state 12
    identifier                go to state 29
    type                      go to state 30
    typeDeclaration           go to state 31
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 44
    procedureDeclaration      go to state 45


state 47

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 48

   13 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 13 (compoundStatement)


state 49

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 50

    0 $accept: program $end .

    $default  accept


state 51

   72 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 72 (logicalValue)


state 52

   37 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 108
    factor      go to state 61
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 53

   38 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 109
    factor      go to state 61
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 54

   48 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   71 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    arithmeticExpression        go to state 110
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 111
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74


state 55

   49 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 49 (realNumber)


state 56

   68 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanPrimary              go to state 112
    logicalValue                go to state 72
    relation                    go to state 73


state 57

  116 statement: TOKEN_PRINT expression .

    $default  reduce using rule 116 (statement)


state 58

   32 expression: arithmeticExpression .

    $default  reduce using rule 32 (expression)


state 59

   34 arithmeticExpression: simpleArithmeticExpression .
   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   73 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 113
    TOKEN_MINUS   shift, and go to state 114
    TOKEN_REL_OP  shift, and go to state 115

    $default  reduce using rule 34 (arithmeticExpression)

    relationalOperator  go to state 116


state 60

   36 simpleArithmeticExpression: term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 117
    TOKEN_MULTIPLY  shift, and go to state 118

    $default  reduce using rule 36 (simpleArithmeticExpression)


state 61

   41 term: factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 119

    $default  reduce using rule 41 (term)


state 62

   44 factor: primary .

    $default  reduce using rule 44 (factor)


state 63

   46 primary: realNumber .

    $default  reduce using rule 46 (primary)


state 64

   47 primary: integer .

    $default  reduce using rule 47 (primary)


state 65

   33 expression: booleanExpression .

    $default  reduce using rule 33 (expression)


state 66

   58 booleanExpression: simpleBoolean .
   60 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 120

    $default  reduce using rule 58 (booleanExpression)


state 67

   59 simpleBoolean: implication .
   62 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 121

    $default  reduce using rule 59 (simpleBoolean)


state 68

   61 implication: booleanTerm .
   64 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 122

    $default  reduce using rule 61 (implication)


state 69

   63 booleanTerm: booleanFactor .
   66 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 123

    $default  reduce using rule 63 (booleanTerm)


state 70

   65 booleanFactor: booleanSecondary .

    $default  reduce using rule 65 (booleanFactor)


state 71

   67 booleanSecondary: booleanPrimary .

    $default  reduce using rule 67 (booleanSecondary)


state 72

   69 booleanPrimary: logicalValue .

    $default  reduce using rule 69 (booleanPrimary)


state 73

   70 booleanPrimary: relation .

    $default  reduce using rule 70 (booleanPrimary)


state 74

   35 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    simpleArithmeticExpression  go to state 124
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64


state 75

  105 procedureIdentifier: identifier .

    $default  reduce using rule 105 (procedureIdentifier)


state 76

  139 procedureHeading: procedureIdentifier . @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    $default  reduce using rule 137 (@6)

    @6  go to state 125


state 77

  141 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16
    TOKEN_IF          shift, and go to state 17

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 126
    procedureBody             go to state 127


state 78

   53 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 128


state 79

  102 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 129


state 80

   52 variable: subscriptedVariable .

    $default  reduce using rule 52 (variable)


state 81

   24 arrayIdentifier: identifier .
   51 variable: identifier .

    TOKEN_ASSIGN  reduce using rule 51 (variable)
    $default      reduce using rule 24 (arrayIdentifier)


state 82

   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   73 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 113
    TOKEN_MINUS   shift, and go to state 114
    TOKEN_REL_OP  shift, and go to state 115

    relationalOperator  go to state 116


state 83

   91 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 130


state 84

   25 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   26             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 131
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 132


state 85

   27 arrayList: arraySegment .

    $default  reduce using rule 27 (arrayList)


state 86

   29 arrayList: arrayList . TOKEN_COMMA @1 arraySegment
   30 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 133

    $default  reduce using rule 30 (arrayDeclaration)


state 87

   24 arrayIdentifier: identifier .

    $default  reduce using rule 24 (arrayIdentifier)


state 88

   89 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 89 (conditionalStatement)


state 89

   93 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3

    $default  reduce using rule 103 (empty)

    label                     go to state 89
    integer                   go to state 12
    identifier                go to state 29
    basicStatement            go to state 90
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43


state 90

   93 basicStatement: label basicStatement .

    $default  reduce using rule 93 (basicStatement)


state 91

  100 assignmentStatement: identifier TOKEN_ASSIGN . arithmeticExpression
  101                    | identifier TOKEN_ASSIGN . booleanExpression

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    arithmeticExpression        go to state 134
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 135
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74


state 92

  142 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 75
    procedureIdentifier  go to state 76
    procedureHeading     go to state 136


state 93

   31 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 84
    arraySegment     go to state 85
    arrayList        go to state 137
    identifier       go to state 87


state 94

   82 varIdentifier: identifier .

    $default  reduce using rule 82 (varIdentifier)


state 95

   77 listType: listType . TOKEN_COMMA @2 varIdentifier
   81 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 138

    $default  reduce using rule 81 (typeDeclaration)


state 96

   75 listType: varIdentifier .

    $default  reduce using rule 75 (listType)


state 97

   87 conditionalStatement: ifClause unconditionalStatement . TOKEN_ELSE statement
   90 ifStatement: ifClause unconditionalStatement .

    TOKEN_ELSE  shift, and go to state 139

    $default  reduce using rule 90 (ifStatement)


state 98

   88 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 88 (conditionalStatement)


state 99

   97 unlabelledBasicStatement: procedureStatement @3 . returnStatement

    TOKEN_RETURN  shift, and go to state 140

    returnStatement  go to state 141


state 100

  107 actualParameterPart: TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 142
    arithmeticExpression        go to state 58
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 65
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74
    actualParameterList         go to state 143
    actualParameter             go to state 144


state 101

  106 actualParameterPart: empty .

    $default  reduce using rule 106 (actualParameterPart)


state 102

  104 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 104 (procedureStatement)


state 103

   14 compoundTail: statement TOKEN_END .

    $default  reduce using rule 14 (compoundTail)


state 104

   15 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16
    TOKEN_IF          shift, and go to state 17

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    compoundTail              go to state 145
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 44


state 105

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 106

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 107

   48 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 110
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 108

   37 simpleArithmeticExpression: TOKEN_PLUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 117
    TOKEN_MULTIPLY  shift, and go to state 118

    $default  reduce using rule 37 (simpleArithmeticExpression)


state 109

   38 simpleArithmeticExpression: TOKEN_MINUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 117
    TOKEN_MULTIPLY  shift, and go to state 118

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 110

   48 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 147


state 111

   71 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 148


state 112

   68 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 68 (booleanSecondary)


state 113

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 149
    factor      go to state 61
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 114

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 150
    factor      go to state 61
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 115

   74 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 74 (relationalOperator)


state 116

   73 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    simpleArithmeticExpression  go to state 151
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64


state 117

   43 term: term TOKEN_DIVIDE . factor

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    factor      go to state 152
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 118

   42 term: term TOKEN_MULTIPLY . factor

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    factor      go to state 153
    primary     go to state 62
    realNumber  go to state 63
    integer     go to state 64


state 119

   45 factor: factor TOKEN_POWER . primary

    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3

    primary     go to state 154
    realNumber  go to state 63
    integer     go to state 64


state 120

   60 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    implication                 go to state 155
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73


state 121

   62 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanTerm                 go to state 156
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73


state 122

   64 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanFactor               go to state 157
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73


state 123

   66 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56

    simpleArithmeticExpression  go to state 82
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanSecondary            go to state 158
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73


state 124

   35 arithmeticExpression: ifClause simpleArithmeticExpression . TOKEN_ELSE arithmeticExpression
   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 113
    TOKEN_MINUS  shift, and go to state 114
    TOKEN_ELSE   shift, and go to state 159


state 125

  139 procedureHeading: procedureIdentifier @6 . formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 160

    $default  reduce using rule 103 (empty)

    empty                go to state 161
    formalParameterPart  go to state 162


state 126

  140 procedureBody: statement .

    $default  reduce using rule 140 (procedureBody)


state 127

  141 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 141 (procedureDeclaration)


state 128

   53 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 163
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    subscriptList               go to state 164
    subscriptExpression         go to state 165
    ifClause                    go to state 74


state 129

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 130

   91 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 91 (ifClause)


state 131

   26 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 84
    arraySegment     go to state 167
    identifier       go to state 87


state 132

   25 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    lowerBound                  go to state 168
    boundPair                   go to state 169
    boundPairList               go to state 170
    arithmeticExpression        go to state 171
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 133

   29 arrayList: arrayList TOKEN_COMMA . @1 arraySegment

    $default  reduce using rule 28 (@1)

    @1  go to state 172


state 134

  100 assignmentStatement: identifier TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 100 (assignmentStatement)


state 135

  101 assignmentStatement: identifier TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 101 (assignmentStatement)


state 136

  142 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16
    TOKEN_IF          shift, and go to state 17

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 126
    procedureBody             go to state 173


state 137

   29 arrayList: arrayList . TOKEN_COMMA @1 arraySegment
   31 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 133

    $default  reduce using rule 31 (arrayDeclaration)


state 138

   77 listType: listType TOKEN_COMMA . @2 varIdentifier

    $default  reduce using rule 76 (@2)

    @2  go to state 174


state 139

   87 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16
    TOKEN_IF          shift, and go to state 17

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 175


state 140

   99 returnStatement: TOKEN_RETURN . expression

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 176
    arithmeticExpression        go to state 58
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 65
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74


state 141

   97 unlabelledBasicStatement: procedureStatement @3 returnStatement .

    $default  reduce using rule 97 (unlabelledBasicStatement)


state 142

  110 actualParameter: expression .

    $default  reduce using rule 110 (actualParameter)


state 143

  107 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  109 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA                 shift, and go to state 177
    TOKEN_CLOSE_BRACKET         shift, and go to state 178
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 179

    parameterDelimiter  go to state 180


state 144

  108 actualParameterList: actualParameter .

    $default  reduce using rule 108 (actualParameterList)


state 145

   15 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 15 (compoundTail)


state 146

   34 arithmeticExpression: simpleArithmeticExpression .
   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 113
    TOKEN_MINUS  shift, and go to state 114

    $default  reduce using rule 34 (arithmeticExpression)


state 147

   48 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 48 (primary)


state 148

   71 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 71 (booleanPrimary)


state 149

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 117
    TOKEN_MULTIPLY  shift, and go to state 118

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 150

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 117
    TOKEN_MULTIPLY  shift, and go to state 118

    $default  reduce using rule 40 (simpleArithmeticExpression)


state 151

   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   73 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 113
    TOKEN_MINUS  shift, and go to state 114

    $default  reduce using rule 73 (relation)


state 152

   43 term: term TOKEN_DIVIDE factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 119

    $default  reduce using rule 43 (term)


state 153

   42 term: term TOKEN_MULTIPLY factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 119

    $default  reduce using rule 42 (term)


state 154

   45 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 45 (factor)


state 155

   60 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   62 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 121

    $default  reduce using rule 60 (simpleBoolean)


state 156

   62 implication: implication TOKEN_IMPLY booleanTerm .
   64 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 122

    $default  reduce using rule 62 (implication)


state 157

   64 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   66 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 123

    $default  reduce using rule 64 (booleanTerm)


state 158

   66 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 66 (booleanFactor)


state 159

   35 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE . arithmeticExpression

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 181
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 160

  123 formalParameterPart: TOKEN_OPEN_BRACKET . $@5 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 122 ($@5)

    $@5  go to state 182


state 161

  121 formalParameterPart: empty .

    $default  reduce using rule 121 (formalParameterPart)


state 162

  139 procedureHeading: procedureIdentifier @6 formalParameterPart . TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 183


state 163

   56 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 56 (subscriptExpression)


state 164

   53 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   55 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 184
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 185


state 165

   54 subscriptList: subscriptExpression .

    $default  reduce using rule 54 (subscriptList)


state 166

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 186


state 167

   26 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 26 (arraySegment)


state 168

   21 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 187


state 169

   22 boundPairList: boundPair .

    $default  reduce using rule 22 (boundPairList)


state 170

   23 boundPairList: boundPairList . TOKEN_COMMA boundPair
   25 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 188
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 189


state 171

   19 lowerBound: arithmeticExpression .

    $default  reduce using rule 19 (lowerBound)


state 172

   29 arrayList: arrayList TOKEN_COMMA @1 . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 84
    arraySegment     go to state 190
    identifier       go to state 87


state 173

  142 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 142 (procedureDeclaration)


state 174

   77 listType: listType TOKEN_COMMA @2 . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 94
    varIdentifier  go to state 191


state 175

   87 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE statement .

    $default  reduce using rule 87 (conditionalStatement)


state 176

   99 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 99 (returnStatement)


state 177

  111 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 111 (parameterDelimiter)


state 178

  107 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 107 (actualParameterPart)


state 179

  112 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 192


state 180

  109 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_LOGICAL_VALUE  shift, and go to state 51
    TOKEN_PLUS           shift, and go to state 52
    TOKEN_MINUS          shift, and go to state 53
    TOKEN_OPEN_BRACKET   shift, and go to state 54
    TOKEN_REAL_NUM       shift, and go to state 55
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 56
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 142
    arithmeticExpression        go to state 58
    simpleArithmeticExpression  go to state 59
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    booleanExpression           go to state 65
    simpleBoolean               go to state 66
    implication                 go to state 67
    booleanTerm                 go to state 68
    booleanFactor               go to state 69
    booleanSecondary            go to state 70
    booleanPrimary              go to state 71
    logicalValue                go to state 72
    relation                    go to state 73
    ifClause                    go to state 74
    actualParameter             go to state 193


state 181

   35 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression .

    $default  reduce using rule 35 (arithmeticExpression)


state 182

  123 formalParameterPart: TOKEN_OPEN_BRACKET $@5 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 194
    formalParameter      go to state 195
    formalParameterList  go to state 196


state 183

  139 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON . $@7 valuePart specificationPart

    $default  reduce using rule 138 ($@7)

    $@7  go to state 197


state 184

   55 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 163
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    subscriptExpression         go to state 198
    ifClause                    go to state 74


state 185

   53 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 53 (subscriptedVariable)


state 186

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 199
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 187

   21 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    upperBound                  go to state 200
    arithmeticExpression        go to state 201
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 188

   23 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    lowerBound                  go to state 168
    boundPair                   go to state 202
    arithmeticExpression        go to state 171
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 189

   25 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 25 (arraySegment)


state 190

   29 arrayList: arrayList TOKEN_COMMA @1 arraySegment .

    $default  reduce using rule 29 (arrayList)


state 191

   77 listType: listType TOKEN_COMMA @2 varIdentifier .

    $default  reduce using rule 77 (listType)


state 192

  112 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_COLON  shift, and go to state 203


state 193

  109 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 109 (actualParameterList)


state 194

  117 formalParameter: identifier .

    $default  reduce using rule 117 (formalParameter)


state 195

  118 formalParameterList: formalParameter .

    $default  reduce using rule 118 (formalParameterList)


state 196

  120 formalParameterList: formalParameterList . parameterDelimiter $@4 formalParameter
  123 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA                 shift, and go to state 177
    TOKEN_CLOSE_BRACKET         shift, and go to state 204
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 179

    parameterDelimiter  go to state 205


state 197

  139 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 206

    $default  reduce using rule 103 (empty)

    empty      go to state 207
    valuePart  go to state 208


state 198

   55 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 55 (subscriptList)


state 199

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 209


state 200

   21 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 21 (boundPair)


state 201

   20 upperBound: arithmeticExpression .

    $default  reduce using rule 20 (upperBound)


state 202

   23 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 23 (boundPairList)


state 203

  112 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 210


state 204

  123 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 123 (formalParameterPart)


state 205

  120 formalParameterList: formalParameterList parameterDelimiter . $@4 formalParameter

    $default  reduce using rule 119 ($@4)

    $@4  go to state 211


state 206

  126 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 212
    identifierList  go to state 213


state 207

  127 valuePart: empty .

    $default  reduce using rule 127 (valuePart)


state 208

  139 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 214
    TOKEN_TYPE_INTEGER  shift, and go to state 18
    TOKEN_TYPE_REAL     shift, and go to state 19
    TOKEN_TYPE_BOOLEAN  shift, and go to state 20
    TOKEN_TYPE_LABEL    shift, and go to state 215

    $default  reduce using rule 103 (empty)

    type                         go to state 216
    empty                        go to state 217
    specifier                    go to state 218
    specificationPart            go to state 219
    specificationIdentifierList  go to state 220


state 209

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 52
    TOKEN_MINUS         shift, and go to state 53
    TOKEN_OPEN_BRACKET  shift, and go to state 107
    TOKEN_REAL_NUM      shift, and go to state 55
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 221
    simpleArithmeticExpression  go to state 146
    term                        go to state 60
    factor                      go to state 61
    primary                     go to state 62
    realNumber                  go to state 63
    integer                     go to state 64
    ifClause                    go to state 74


state 210

  112 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET .

    $default  reduce using rule 112 (parameterDelimiter)


state 211

  120 formalParameterList: formalParameterList parameterDelimiter $@4 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 194
    formalParameter  go to state 222


state 212

  124 identifierList: identifier .

    $default  reduce using rule 124 (identifierList)


state 213

  125 identifierList: identifierList . TOKEN_COMMA identifier
  126 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 223
    TOKEN_SEMICOLON  shift, and go to state 224


state 214

  131 specifier: TOKEN_SWITCH .

    $default  reduce using rule 131 (specifier)


state 215

  130 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 130 (specifier)


state 216

  128 specifier: type .
  129          | type . TOKEN_ARRAY
  132          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 225
    TOKEN_ARRAY      shift, and go to state 226

    $default  reduce using rule 128 (specifier)


state 217

  133 specificationPart: empty .

    $default  reduce using rule 133 (specificationPart)


state 218

  135 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 212
    identifierList  go to state 227


state 219

  139 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart .

    $default  reduce using rule 139 (procedureHeading)


state 220

  134 specificationPart: specificationIdentifierList .
  136 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 214
    TOKEN_TYPE_INTEGER  shift, and go to state 18
    TOKEN_TYPE_REAL     shift, and go to state 19
    TOKEN_TYPE_BOOLEAN  shift, and go to state 20
    TOKEN_TYPE_LABEL    shift, and go to state 215

    $default  reduce using rule 134 (specificationPart)

    type       go to state 216
    specifier  go to state 228


state 221

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 229


state 222

  120 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter .

    $default  reduce using rule 120 (formalParameterList)


state 223

  125 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 230


state 224

  126 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 126 (valuePart)


state 225

  132 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 132 (specifier)


state 226

  129 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 129 (specifier)


state 227

  125 identifierList: identifierList . TOKEN_COMMA identifier
  135 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 223
    TOKEN_SEMICOLON  shift, and go to state 231


state 228

  136 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 212
    identifierList  go to state 232


state 229

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 16
    TOKEN_IF          shift, and go to state 17

    $default  reduce using rule 103 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 22
    tlabel                    go to state 23
    label                     go to state 24
    unlabelledCompound        go to state 10
    compoundStatement         go to state 25
    integer                   go to state 12
    identifier                go to state 29
    unconditionalStatement    go to state 32
    conditionalStatement      go to state 33
    ifStatement               go to state 34
    ifClause                  go to state 35
    basicStatement            go to state 36
    unlabelledBasicStatement  go to state 37
    dummyStatement            go to state 38
    assignmentStatement       go to state 39
    forStatement              go to state 40
    empty                     go to state 41
    procedureStatement        go to state 42
    procedureIdentifier       go to state 43
    statement                 go to state 233


state 230

  125 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 125 (identifierList)


state 231

  135 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 135 (specificationIdentifierList)


state 232

  125 identifierList: identifierList . TOKEN_COMMA identifier
  136 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 223
    TOKEN_SEMICOLON  shift, and go to state 234


state 233

  102 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 102 (forStatement)


state 234

  136 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 136 (specificationIdentifierList)
